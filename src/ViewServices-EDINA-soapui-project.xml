<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project name="INSPIRE View Service WMS 1_3_0 TG 3_11" resourceRoot="${projectDir}" soapui-version="5.3.0" abortOnError="false" runType="SEQUENTIAL" activeEnvironment="Default" id="bd1b3aed-c139-4891-9314-4446208805a9" xmlns:con="http://eviware.com/soapui/config"><con:description>This test project checks an implementation of WMS version 1.3.0 to the requirements that the INSPIRE View Services Technical Guidance (TG version 3.11) lays down. It tests for mandatory and optional parts.</con:description><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.TestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Global Properties" value=""/>
  <con:entry key="TestSuite" value="FR-V3 - Availability"/>
  <con:entry key="Report to Generate" value=""/>
  <con:entry key="Password" value=""/>
  <con:entry key="soapui-setings.xml Password" value=""/>
  <con:entry key="TestRunner Path" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="Save Project" value="false"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Export JUnit Results" value="false"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="Export All" value="true"/>
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="TestCase" value="&lt;all>"/>
  <con:entry key="Print Report" value="false"/>
  <con:entry key="Username" value=""/>
  <con:entry key="Root Folder" value="/home/esdin/distributions/raw/"/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="Endpoint" value=""/>
</xml-fragment>]]></con:setting><con:setting id="ProjectSettings@hermesConfig">${#System#user.home}\.hermes</con:setting></con:settings><con:interface xsi:type="con:RestService" wadlVersion="http://wadl.dev.java.net/2009/02" name="WMS" type="rest" basePath="" id="eb4518a5-df55-4444-aa20-37698546bd54" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT"/><con:endpoints><con:endpoint>${#Project#getCapabilitiesURL}</con:endpoint><con:endpoint>${#Project#getMapUrl}</con:endpoint><con:endpoint>${#Project#serviceEndpoint}</con:endpoint></con:endpoints><con:resource name="viewservice" path="" id="7c46e1b4-4972-4571-9356-994bdd93bcb1"><con:settings/><con:parameters><con:parameter required="true"><con:name>REQUEST</con:name><con:value>GetCapabilities</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>GetCapabilities</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter required="true"><con:name>SERVICE</con:name><con:value>WMS</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>WMS</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter required="false" disableUrlEncoding="false"><con:name>ACCEPTVERSIONS</con:name><con:value>1.3.0</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>1.3.0</con:default><con:description xsi:nil="true"/></con:parameter></con:parameters><con:method name="GetCapabilities" method="GET" id="9e90a39e-28d5-4544-986a-f1d2ee0f6e45"><con:settings/><con:parameters><con:parameter><con:name>REQUEST</con:name><con:value>GetCapabilities</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>GetCapabilities</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter required="true"><con:name>ACCEPTVERSIONS</con:name><con:value>1.3.0</con:value><con:style>QUERY</con:style><con:default>1.3.0</con:default></con:parameter><con:parameter required="true"><con:name>SERVICE</con:name><con:value>WMS</con:value><con:style>QUERY</con:style><con:default>WMS</con:default></con:parameter><con:parameter><con:name>LANGUAGE</con:name><con:style>QUERY</con:style></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>text/html</con:mediaType><con:status>200</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:wms="http://www.opengis.net/wms">wms:WMS_Capabilities</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/vnd.ogc.se_xml</con:mediaType><con:status>200</con:status><con:params/><con:element>ServiceExceptionReport</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/vnd.ogc.wms_xml</con:mediaType><con:status>200</con:status><con:params/><con:element>WMT_MS_Capabilities</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>403 401</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:request name="GetCapabilities" mediaType="application/xml" id="82e33304-87c4-4485-8eaa-136ce5af1e9e"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#serviceEndpoint}</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:request></con:method><con:method name="GetMap" method="GET" id="4a97ea08-1280-4411-b3b5-ca0613c591b6"><con:settings/><con:parameters><con:parameter required="true"><con:name>REQUEST</con:name><con:value>GetMap</con:value><con:style>QUERY</con:style><con:type xmlns:xs="http://www.w3.org/2001/XMLSchema">xs:string</con:type><con:default>GetMap</con:default><con:description xsi:nil="true"/></con:parameter><con:parameter required="true"><con:name>VERSION</con:name><con:value>1.3.0</con:value><con:style>QUERY</con:style><con:default>1.3.0</con:default></con:parameter><con:parameter required="true"><con:name>LAYERS</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter><con:parameter required="true"><con:name>STYLES</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter><con:parameter required="true"><con:name>CRS</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter><con:parameter required="true"><con:name>BBOX</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter><con:parameter required="true"><con:name>WIDTH</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter><con:parameter required="true"><con:name>HEIGHT</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter><con:parameter required="true"><con:name>FORMAT</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter><con:parameter required="true"><con:name>TRANSPARENT</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter><con:parameter><con:name>BGCOLOR</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter><con:parameter><con:name>EXCEPTIONS</con:name><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>SRS</con:name><con:value/><con:style>QUERY</con:style><con:default/></con:parameter></con:parameters><con:representation type="RESPONSE"><con:mediaType>image/png</con:mediaType><con:status>200</con:status><con:params/></con:representation><con:representation type="RESPONSE"><con:mediaType>text/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:ogc="http://www.opengis.net/ogc">ogc:ServiceExceptionReport</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>text/html</con:mediaType><con:status>200</con:status><con:params/><con:element>HTML</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType xsi:nil="true"/><con:status>0</con:status><con:params/><con:element>data</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/vnd.ogc.se_xml</con:mediaType><con:status>200</con:status><con:params/><con:element>ServiceExceptionReport</con:element></con:representation><con:representation type="FAULT"><con:mediaType>text/html</con:mediaType><con:status>500</con:status><con:params/><con:element>html</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/xml</con:mediaType><con:status>200</con:status><con:params/><con:element xmlns:ows="http://www.opengis.net/ows">ows:ExceptionReport</con:element></con:representation><con:request name="GetMap" mediaType="application/xml" accept="" id="8990c704-181f-49d6-a238-e69c67df4ed2"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#serviceEndpoint}</con:endpoint><con:request/><con:credentials><con:username xsi:nil="true"/><con:password xsi:nil="true"/><con:domain xsi:nil="true"/><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters>
  <con:entry key="CRS" value="EPSG:4258"/>
  <con:entry key="FORMAT" value="image/png"/>
  <con:entry key="BBOX" value="55.932200860977,-3.2321491153717,55.967799139023,-3.1544508846283"/>
  <con:entry key="WIDTH" value="800"/>
  <con:entry key="HEIGHT" value="600"/>
  <con:entry key="TRANSPARENT" value="true"/>
  <con:entry key="LAYERS" value="AdministrativeUnits"/>
</con:parameters><con:parameterOrder><con:entry>REQUEST</con:entry><con:entry>SERVICE</con:entry><con:entry>VERSION</con:entry><con:entry>LAYERS</con:entry><con:entry>STYLES</con:entry><con:entry>CRS</con:entry><con:entry>BBOX</con:entry><con:entry>WIDTH</con:entry><con:entry>HEIGHT</con:entry><con:entry>FORMAT</con:entry><con:entry>TRANSPARENT</con:entry><con:entry>BGCOLOR</con:entry><con:entry>EXCEPTIONS</con:entry><con:entry>SRS</con:entry><con:entry>VERSION</con:entry></con:parameterOrder></con:request></con:method></con:resource><con:inferredSchema><![CDATA[<?xml version="1.0" encoding="UTF-8"?>
<xml-fragment><inf:schema xmlns:inf="http://www.eviware.com/soapui/InferredSchema"><inf:namespace>http://www.opengis.net/wms</inf:namespace><inf:particle xsi:type="inf:ElementParticle" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><inf:name>WMS_Capabilities</inf:name><inf:type xsi:type="inf:TypeReference"><inf:reference xmlns:wms="http://www.opengis.net/wms">wms:WMS_Capabilities</inf:reference></inf:type></inf:particle><inf:particle xsi:type="inf:ElementParticle" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><inf:name>Format</inf:name><inf:type xsi:type="inf:SimpleType"><inf:completed>false</inf:completed><inf:typeName>string</inf:typeName></inf:type></inf:particle><inf:particle xsi:type="inf:ElementParticle" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><inf:name>DCPType</inf:name><inf:type xsi:type="inf:TypeReference"><inf:reference xmlns:wms="http://www.opengis.net/wms">wms:_DCPType</inf:reference></inf:type></inf:particle><inf:prefix key="http://mapserver.gis.umn.edu/mapserver" value="ms"/><inf:prefix key="http://www.w3.org/2001/XMLSchema" value="xs"/><inf:prefix key="http://www.opengis.net/sld" value="sld"/><inf:prefix key="http://www.w3.org/1999/xlink" value="xlink"/><inf:complexType><inf:completed>true</inf:completed><inf:mixed>false</inf:mixed><inf:name>Request_GetMap</inf:name><inf:content xsi:type="inf:SequenceContent" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><inf:completed>true</inf:completed><inf:particle xsi:type="inf:ElementParticle"><inf:name>Format</inf:name><inf:attribute key="maxOccurs" value="7"/><inf:type xsi:type="inf:SimpleType"><inf:completed>false</inf:completed><inf:typeName>string</inf:typeName></inf:type></inf:particle><inf:particle xsi:type="inf:ElementParticle"><inf:name>DCPType</inf:name><inf:type xsi:type="inf:TypeReference"><inf:reference xmlns:wms="http://www.opengis.net/wms">wms:GetMap_DCPType</inf:reference></inf:type></inf:particle><inf:comesBefore qname="wms:Format" xmlns:wms="http://www.opengis.net/wms"><inf:other>wms:DCPType</inf:other></inf:comesBefore><inf:comesBefore qname="wms:DCPType" xmlns:wms="http://www.opengis.net/wms"/></inf:content></inf:complexType><inf:complexType><inf:completed>true</inf:completed><inf:mixed>false</inf:mixed><inf:name>DCPType_HTTP</inf:name><inf:content xsi:type="inf:SequenceContent" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><inf:completed>true</inf:completed><inf:particle xsi:type="inf:ElementParticle"><inf:name>Get</inf:name><inf:type xsi:type="inf:TypeReference"><inf:reference xmlns:wms="http://www.opengis.net/wms">wms:HTTP_Get</inf:reference></inf:type></inf:particle><inf:particle xsi:type="inf:ElementParticle"><inf:name>Post</inf:name><inf:type xsi:type="inf:TypeReference"><inf:reference xmlns:wms="http://www.opengis.net/wms">wms:HTTP_Post</inf:reference></inf:type></inf:particle><inf:comesBefore qname="wms:Post" xmlns:wms="http://www.opengis.net/wms"/><inf:comesBefore qname="wms:Get" xmlns:wms="http://www.opengis.net/wms"><inf:other>wms:Post</inf:other></inf:comesBefore></inf:content></inf:complexType><inf:complexType><inf:completed>true</inf:completed><inf:mixed>false</inf:mixed><inf:name>Capability_Layer</inf:name><inf:content xsi:type="inf:SequenceContent" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><inf:completed>true</inf:completed><inf:particle xsi:type="inf:ElementParticle"><inf:name>Name</inf:name><inf:type xsi:type="inf:SimpleType"><inf:completed>false</inf:completed><inf:typeName>string</inf:typeName></inf:type></inf:particle><inf:particle xsi:type="inf:ElementParticle"><inf:name>Title</inf:name><inf:type xsi:type="inf:SimpleType"><inf:completed>false</inf:completed><inf:typeName>string</inf:typeName></inf:type></inf:particle><inf:particle xsi:type="inf:ElementParticle"><inf:name>Abstract</inf:name><inf:type xsi:type="inf:SimpleType"><inf:completed>false</inf:completed><inf:typeName>string</inf:typeName></inf:type></inf:particle><inf:particle xsi:type="inf:ElementParticle"><inf:name>KeywordList</inf:name><inf:type xsi:type="inf:TypeReference"><inf:reference xmlns:wms="http://www.opengis.net/wms">wms:Layer_KeywordList</inf:reference></inf:type></inf:particle><inf:particle xsi:type="inf:ElementParticle"><inf:name>CRS</inf:name><inf:attribute key="maxOccurs" value="18"/><inf:type xsi:type="inf:SimpleType"><inf:completed>false</inf:completed><inf:typeName>string</inf:typeName></inf:type></inf:particle><inf:particle xsi:type="inf:ElementParticle"><inf:name>EX_GeographicBoundingBox</inf:name><inf:type xsi:type="inf:TypeReference"><inf:reference xmlns:wms="http://www.opengis.net/wms">wms:EX_GeographicBoundingBox</inf:reference></inf:type></inf:particle><inf:particle xsi:type="inf:ElementParticle"><inf:name>Layer</inf:name><inf:attribute key="maxOccurs" value="5"/><inf:type xsi:type="inf:TypeReference"><inf:reference xmlns:wms="http://www.opengis.net/wms">wms:Layer_Layer</inf:reference></inf:type></inf:particle><inf:comesBefore qname="wms:Layer" xmlns:wms="http://www.opengis.net/wms"/><inf:comesBefore qname="wms:Name" xmlns:wms="http://www.opengis.net/wms"><inf:other>wms:Title</inf:other><inf:other>wms:Abstract</inf:other><inf:other>wms:KeywordList</inf:other><inf:other>wms:CRS</inf:other><inf:other>wms:EX_GeographicBoundingBox</inf:other><inf:other>wms:Layer</inf:other></inf:comesBefore><inf:comesBefore qname="wms:CRS" xmlns:wms="http://www.opengis.net/wms"><inf:other>wms:EX_GeographicBoundingBox</inf:other><inf:other>wms:Layer</inf:other></inf:comesBefore><inf:comesBefore qname="wms:EX_GeographicBoundingBox" xmlns:wms="http://www.opengis.net/wms"><inf:other>wms:Layer</inf:other></inf:comesBefore><inf:comesBefore qname="wms:Title" xmlns:wms="http://www.opengis.net/wms"><inf:other>wms:Abstract</inf:other><inf:other>wms:KeywordList</inf:other><inf:other>wms:CRS</inf:other><inf:other>wms:EX_GeographicBoundingBox</inf:other><inf:other>wms:Layer</inf:other></inf:comesBefore><inf:comesBefore qname="wms:KeywordList" xmlns:wms="http://www.opengis.net/wms"><inf:other>wms:CRS</inf:other><inf:other>wms:EX_GeographicBoundingBox</inf:other><inf:other>wms:Layer</inf:other></inf:comesBefore><inf:comesBefore qname="wms:Abstract" xmlns:wms="http://www.opengis.net/wms"><inf:other>wms:KeywordList</inf:other><inf:other>wms:CRS</inf:other><inf:other>wms:EX_GeographicBoundingBox</inf:other><inf:other>wms:Layer</inf:other></inf:comesBefore></inf:content></inf:complexType><inf:complexType><inf:completed>true</inf:completed><inf:mixed>false</inf:mixed><inf:name>Capability_Exception</inf:name><inf:content xsi:type="inf:SequenceContent" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><inf:completed>true</inf:completed><inf:particle xsi:type="inf:ElementParticle"><inf:name>Format</inf:name><inf:attribute key="maxOccurs" value="3"/><inf:type xsi:type="inf:SimpleType"><inf:completed>false</inf:completed><inf:typeName>string</inf:typeName></inf:type></inf:particle><inf:comesBefore qname="wms:Format" xmlns:wms="http://www.opengis.net/wms"/></inf:content></inf:complexType><inf:complexType><inf:completed>true</inf:completed><inf:mixed>false</inf:mixed><inf:name>Capability_Request</inf:name><inf:content xsi:type="inf:SequenceContent" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><inf:completed>true</inf:completed><inf:particle xsi:type="inf:ElementParticle"><inf:name>GetCapabilities</inf:name><inf:type xsi:type="inf:TypeReference"><inf:reference xmlns:wms="http://www.opengis.net/wms">wms:Request_GetCapabilities</inf:reference></inf:type></inf:particle><inf:particle xsi:type="inf:ElementParticle"><inf:name>GetMap</inf:name><inf:type xsi:type="inf:TypeReference"><inf:reference xmlns:wms="http://www.opengis.net/wms">wms:Request_GetMap</inf:reference></inf:type></inf:particle><inf:particle xsi:type="inf:ElementParticle"><inf:name>GetFeatureInfo</inf:name><inf:type xsi:type="inf:TypeReference"><inf:reference xmlns:wms="http://www.opengis.net/wms">wms:Request_GetFeatureInfo</inf:reference></inf:type></inf:particle><inf:particle xsi:type="inf:ReferenceParticle"><inf:reference xmlns:sld="http://www.opengis.net/sld">sld:DescribeLayer</inf:reference></inf:particle><inf:particle xsi:type="inf:ReferenceParticle"><inf:reference xmlns:sld="http://www.opengis.net/sld">sld:GetLegendGraphic</inf:reference></inf:particle><inf:particle xsi:type="inf:ReferenceParticle"><inf:reference xmlns:map="http://mapserver.gis.umn.edu/mapserver">map:GetStyles</inf:reference></inf:particle><inf:comesBefore qname="map:GetStyles" xmlns:map="http://mapserver.gis.umn.edu/mapserver"/><inf:comesBefore qname="wms:GetCapabilities" xmlns:wms="http://www.opengis.net/wms"><inf:other>wms:GetMap</inf:other><inf:other>wms:GetFeatureInfo</inf:other><inf:other xmlns:sld="http://www.opengis.net/sld">sld:DescribeLayer</inf:other><inf:other xmlns:sld="http://www.opengis.net/sld">sld:GetLegendGraphic</inf:other><inf:other xmlns:map="http://mapserver.gis.umn.edu/mapserver">map:GetStyles</inf:other></inf:comesBefore><inf:comesBefore qname="sld:GetLegendGraphic" xmlns:sld="http://www.opengis.net/sld"><inf:other xmlns:map="http://mapserver.gis.umn.edu/mapserver">map:GetStyles</inf:other></inf:comesBefore><inf:comesBefore qname="sld:DescribeLayer" xmlns:sld="http://www.opengis.net/sld"><inf:other>sld:GetLegendGraphic</inf:other><inf:other xmlns:map="http://mapserver.gis.umn.edu/mapserver">map:GetStyles</inf:other></inf:comesBefore><inf:comesBefore qname="wms:GetMap" xmlns:wms="http://www.opengis.net/wms"><inf:other>wms:GetFeatureInfo</inf:other><inf:other xmlns:sld="http://www.opengis.net/sld">sld:DescribeLayer</inf:other><inf:other xmlns:sld="http://www.opengis.net/sld">sld:GetLegendGraphic</inf:other><inf:other xmlns:map="http://mapserver.gis.umn.edu/mapserver">map:GetStyles</inf:other></inf:comesBefore><inf:comesBefore qname="wms:GetFeatureInfo" xmlns:wms="http://www.opengis.net/wms"><inf:other xmlns:sld="http://www.opengis.net/sld">sld:DescribeLayer</inf:other><inf:other xmlns:sld="http://www.opengis.net/sld">sld:GetLegendGraphic</inf:other><inf:other xmlns:map="http://mapserver.gis.umn.edu/mapserver">map:GetStyles</inf:other></inf:comesBefore></inf:content></inf:complexType><inf:complexType><inf:completed>true</inf:completed><inf:mixed>false</inf:mixed><inf:name>LegendURL_OnlineResource</inf:name><inf:attribute xsi:type="inf:ReferenceParticle" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><inf:reference xmlns:xlin="http://www.w3.org/1999/xlink">xlin:href</inf:reference></inf:attribute><inf:attribute xsi:type="inf:ReferenceParticle" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><inf:reference xmlns:xlin="http://www.w3.org/1999/xlink">xlin:type</inf:reference></inf:attribute><inf:content xsi:type="inf:EmptyContent" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><inf:completed>true</inf:completed></inf:content></inf:complexType><inf:complexType><inf:completed>true</inf:completed><inf:mixed>false</inf:mixed><inf:name>Post_OnlineResource</inf:name><inf:attribute xsi:type="inf:ReferenceParticle" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><inf:reference xmlns:xlin="http://www.w3.org/1999/xlink">xlin:href</inf:reference></inf:attribute><inf:content xsi:type="inf:EmptyContent" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><inf:completed>true</inf:completed></inf:content></inf:complexType><inf:complexType><inf:completed>true</inf:completed><inf:mixed>false</inf:mixed><inf:name>Style_LegendURL</inf:name><inf:attribute xsi:type="inf:AttributeParticle" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><inf:name>height</inf:name><inf:type xsi:type="inf:SimpleType"><inf:completed>false</inf:completed><inf:typeName>positiveInteger</inf:typeName></inf:type></inf:attribute><inf:attribute xsi:type="inf:AttributeParticle" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><inf:name>width</inf:name><inf:type xsi:type="inf:SimpleType"><inf:completed>false</inf:completed><inf:typeName>positiveInteger</inf:typeName></inf:type></inf:attribute><inf:content xsi:type="inf:SequenceContent" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><inf:completed>true</inf:completed><inf:particle xsi:type="inf:ElementParticle"><inf:name>Format</inf:name><inf:type xsi:type="inf:SimpleType"><inf:completed>false</inf:completed><inf:typeName>string</inf:typeName></inf:type></inf:particle><inf:particle xsi:type="inf:ElementParticle"><inf:name>OnlineResource</inf:name><inf:type xsi:type="inf:TypeReference"><inf:reference xmlns:wms="http://www.opengis.net/wms">wms:LegendURL_OnlineResource</inf:reference></inf:type></inf:particle><inf:comesBefore qname="wms:Format" xmlns:wms="http://www.opengis.net/wms"><inf:other>wms:OnlineResource</inf:other></inf:comesBefore><inf:comesBefore qname="wms:OnlineResource" xmlns:wms="http://www.opengis.net/wms"/></inf:content></inf:complexType><inf:complexType><inf:completed>true</inf:completed><inf:mixed>false</inf:mixed><inf:name>HTTP_Post</inf:name><inf:content xsi:type="inf:SequenceContent" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><inf:completed>true</inf:completed><inf:particle xsi:type="inf:ElementParticle"><inf:name>OnlineResource</inf:name><inf:type xsi:type="inf:TypeReference"><inf:reference xmlns:wms="http://www.opengis.net/wms">wms:Post_OnlineResource</inf:reference></inf:type></inf:particle><inf:comesBefore qname="wms:OnlineResource" xmlns:wms="http://www.opengis.net/wms"/></inf:content></inf:complexType><inf:complexType><inf:completed>true</inf:completed><inf:mixed>false</inf:mixed><inf:name>WMS_Capabilities</inf:name><inf:attribute xsi:type="inf:AttributeParticle" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><inf:name>version</inf:name><inf:type xsi:type="inf:SimpleType"><inf:completed>false</inf:completed><inf:typeName>string</inf:typeName></inf:type></inf:attribute><inf:content xsi:type="inf:SequenceContent" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><inf:completed>true</inf:completed><inf:particle xsi:type="inf:ElementParticle"><inf:name>Service</inf:name><inf:type xsi:type="inf:TypeReference"><inf:reference xmlns:wms="http://www.opengis.net/wms">wms:Capabilities_Service</inf:reference></inf:type></inf:particle><inf:particle xsi:type="inf:ElementParticle"><inf:name>Capability</inf:name><inf:type xsi:type="inf:TypeReference"><inf:reference xmlns:wms="http://www.opengis.net/wms">wms:Capabilities_Capability</inf:reference></inf:type></inf:particle><inf:comesBefore qname="wms:Service" xmlns:wms="http://www.opengis.net/wms"><inf:other>wms:Capability</inf:other></inf:comesBefore><inf:comesBefore qname="wms:Capability" xmlns:wms="http://www.opengis.net/wms"/></inf:content></inf:complexType><inf:complexType><inf:completed>true</inf:completed><inf:mixed>false</inf:mixed><inf:name>Capabilities_Service</inf:name><inf:content xsi:type="inf:SequenceContent" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><inf:completed>true</inf:completed><inf:particle xsi:type="inf:ElementParticle"><inf:name>Name</inf:name><inf:type xsi:type="inf:SimpleType"><inf:completed>false</inf:completed><inf:typeName>string</inf:typeName></inf:type></inf:particle><inf:particle xsi:type="inf:ElementParticle"><inf:name>Title</inf:name><inf:type xsi:type="inf:SimpleType"><inf:completed>false</inf:completed><inf:typeName>string</inf:typeName></inf:type></inf:particle><inf:particle xsi:type="inf:ElementParticle"><inf:name>Abstract</inf:name><inf:type xsi:type="inf:SimpleType"><inf:completed>false</inf:completed><inf:typeName>string</inf:typeName></inf:type></inf:particle><inf:particle xsi:type="inf:ElementParticle"><inf:name>KeywordList</inf:name><inf:type xsi:type="inf:TypeReference"><inf:reference xmlns:wms="http://www.opengis.net/wms">wms:Service_KeywordList</inf:reference></inf:type></inf:particle><inf:particle xsi:type="inf:ElementParticle"><inf:name>OnlineResource</inf:name><inf:type xsi:type="inf:TypeReference"><inf:reference xmlns:wms="http://www.opengis.net/wms">wms:Service_OnlineResource</inf:reference></inf:type></inf:particle><inf:particle xsi:type="inf:ElementParticle"><inf:name>ContactInformation</inf:name><inf:type xsi:type="inf:TypeReference"><inf:reference xmlns:wms="http://www.opengis.net/wms">wms:Service_ContactInformation</inf:reference></inf:type></inf:particle><inf:particle xsi:type="inf:ElementParticle"><inf:name>Fees</inf:name><inf:type xsi:type="inf:SimpleType"><inf:completed>false</inf:completed><inf:typeName>string</inf:typeName></inf:type></inf:particle><inf:particle xsi:type="inf:ElementParticle"><inf:name>AccessConstraints</inf:name><inf:type xsi:type="inf:SimpleType"><inf:completed>false</inf:completed><inf:typeName>string</inf:typeName></inf:type></inf:particle><inf:particle xsi:type="inf:ElementParticle"><inf:name>MaxWidth</inf:name><inf:type xsi:type="inf:SimpleType"><inf:completed>false</inf:completed><inf:typeName>positiveInteger</inf:typeName></inf:type></inf:particle><inf:particle xsi:type="inf:ElementParticle"><inf:name>MaxHeight</inf:name><inf:type xsi:type="inf:SimpleType"><inf:completed>false</inf:completed><inf:typeName>positiveInteger</inf:typeName></inf:type></inf:particle><inf:comesBefore qname="wms:MaxWidth" xmlns:wms="http://www.opengis.net/wms"><inf:other>wms:MaxHeight</inf:other></inf:comesBefore><inf:comesBefore qname="wms:Fees" xmlns:wms="http://www.opengis.net/wms"><inf:other>wms:AccessConstraints</inf:other><inf:other>wms:MaxWidth</inf:other><inf:other>wms:MaxHeight</inf:other></inf:comesBefore><inf:comesBefore qname="wms:ContactInformation" xmlns:wms="http://www.opengis.net/wms"><inf:other>wms:Fees</inf:other><inf:other>wms:AccessConstraints</inf:other><inf:other>wms:MaxWidth</inf:other><inf:other>wms:MaxHeight</inf:other></inf:comesBefore><inf:comesBefore qname="wms:Name" xmlns:wms="http://www.opengis.net/wms"><inf:other>wms:Title</inf:other><inf:other>wms:Abstract</inf:other><inf:other>wms:KeywordList</inf:other><inf:other>wms:OnlineResource</inf:other><inf:other>wms:ContactInformation</inf:other><inf:other>wms:Fees</inf:other><inf:other>wms:AccessConstraints</inf:other><inf:other>wms:MaxWidth</inf:other><inf:other>wms:MaxHeight</inf:other></inf:comesBefore><inf:comesBefore qname="wms:AccessConstraints" xmlns:wms="http://www.opengis.net/wms"><inf:other>wms:MaxWidth</inf:other><inf:other>wms:MaxHeight</inf:other></inf:comesBefore><inf:comesBefore qname="wms:MaxHeight" xmlns:wms="http://www.opengis.net/wms"/><inf:comesBefore qname="wms:OnlineResource" xmlns:wms="http://www.opengis.net/wms"><inf:other>wms:ContactInformation</inf:other><inf:other>wms:Fees</inf:other><inf:other>wms:AccessConstraints</inf:other><inf:other>wms:MaxWidth</inf:other><inf:other>wms:MaxHeight</inf:other></inf:comesBefore><inf:comesBefore qname="wms:Title" xmlns:wms="http://www.opengis.net/wms"><inf:other>wms:Abstract</inf:other><inf:other>wms:KeywordList</inf:other><inf:other>wms:OnlineResource</inf:other><inf:other>wms:ContactInformation</inf:other><inf:other>wms:Fees</inf:other><inf:other>wms:AccessConstraints</inf:other><inf:other>wms:MaxWidth</inf:other><inf:other>wms:MaxHeight</inf:other></inf:comesBefore><inf:comesBefore qname="wms:KeywordList" xmlns:wms="http://www.opengis.net/wms"><inf:other>wms:OnlineResource</inf:other><inf:other>wms:ContactInformation</inf:other><inf:other>wms:Fees</inf:other><inf:other>wms:AccessConstraints</inf:other><inf:other>wms:MaxWidth</inf:other><inf:other>wms:MaxHeight</inf:other></inf:comesBefore><inf:comesBefore qname="wms:Abstract" xmlns:wms="http://www.opengis.net/wms"><inf:other>wms:KeywordList</inf:other><inf:other>wms:OnlineResource</inf:other><inf:other>wms:ContactInformation</inf:other><inf:other>wms:Fees</inf:other><inf:other>wms:AccessConstraints</inf:other><inf:other>wms:MaxWidth</inf:other><inf:other>wms:MaxHeight</inf:other></inf:comesBefore></inf:content></inf:complexType><inf:complexType><inf:completed>true</inf:completed><inf:mixed>false</inf:mixed><inf:name>Layer_KeywordList</inf:name><inf:content xsi:type="inf:SequenceContent" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><inf:completed>true</inf:completed><inf:particle xsi:type="inf:ElementParticle"><inf:name>Keyword</inf:name><inf:attribute key="maxOccurs" value="4"/><inf:type xsi:type="inf:SimpleType"><inf:completed>false</inf:completed><inf:typeName>string</inf:typeName></inf:type></inf:particle><inf:comesBefore qname="wms:Keyword" xmlns:wms="http://www.opengis.net/wms"/></inf:content></inf:complexType><inf:complexType><inf:completed>true</inf:completed><inf:mixed>false</inf:mixed><inf:name>Layer_Style</inf:name><inf:content xsi:type="inf:SequenceContent" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><inf:completed>true</inf:completed><inf:particle xsi:type="inf:ElementParticle"><inf:name>Name</inf:name><inf:type xsi:type="inf:SimpleType"><inf:completed>false</inf:completed><inf:typeName>string</inf:typeName></inf:type></inf:particle><inf:particle xsi:type="inf:ElementParticle"><inf:name>Title</inf:name><inf:type xsi:type="inf:SimpleType"><inf:completed>false</inf:completed><inf:typeName>string</inf:typeName></inf:type></inf:particle><inf:particle xsi:type="inf:ElementParticle"><inf:name>LegendURL</inf:name><inf:type xsi:type="inf:TypeReference"><inf:reference xmlns:wms="http://www.opengis.net/wms">wms:Style_LegendURL</inf:reference></inf:type></inf:particle><inf:comesBefore qname="wms:Name" xmlns:wms="http://www.opengis.net/wms"><inf:other>wms:Title</inf:other><inf:other>wms:LegendURL</inf:other></inf:comesBefore><inf:comesBefore qname="wms:LegendURL" xmlns:wms="http://www.opengis.net/wms"/><inf:comesBefore qname="wms:Title" xmlns:wms="http://www.opengis.net/wms"><inf:other>wms:LegendURL</inf:other></inf:comesBefore></inf:content></inf:complexType><inf:complexType><inf:completed>true</inf:completed><inf:mixed>false</inf:mixed><inf:name>Request_GetFeatureInfo</inf:name><inf:content xsi:type="inf:SequenceContent" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><inf:completed>true</inf:completed><inf:particle xsi:type="inf:ElementParticle"><inf:name>Format</inf:name><inf:attribute key="maxOccurs" value="2"/><inf:type xsi:type="inf:SimpleType"><inf:completed>false</inf:completed><inf:typeName>string</inf:typeName></inf:type></inf:particle><inf:particle xsi:type="inf:ElementParticle"><inf:name>DCPType</inf:name><inf:type xsi:type="inf:TypeReference"><inf:reference xmlns:wms="http://www.opengis.net/wms">wms:GetFeatureInfo_DCPType</inf:reference></inf:type></inf:particle><inf:comesBefore qname="wms:Format" xmlns:wms="http://www.opengis.net/wms"><inf:other>wms:DCPType</inf:other></inf:comesBefore><inf:comesBefore qname="wms:DCPType" xmlns:wms="http://www.opengis.net/wms"/></inf:content></inf:complexType><inf:complexType><inf:completed>true</inf:completed><inf:mixed>false</inf:mixed><inf:name>_DCPType</inf:name><inf:content xsi:type="inf:SequenceContent" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><inf:completed>true</inf:completed><inf:particle xsi:type="inf:ElementParticle"><inf:name>HTTP</inf:name><inf:type xsi:type="inf:TypeReference"><inf:reference xmlns:wms="http://www.opengis.net/wms">wms:DCPType_HTTP</inf:reference></inf:type></inf:particle><inf:comesBefore qname="wms:HTTP" xmlns:wms="http://www.opengis.net/wms"/></inf:content></inf:complexType><inf:complexType><inf:completed>true</inf:completed><inf:mixed>false</inf:mixed><inf:name>Service_KeywordList</inf:name><inf:content xsi:type="inf:SequenceContent" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><inf:completed>true</inf:completed><inf:particle xsi:type="inf:ElementParticle"><inf:name>Keyword</inf:name><inf:type xsi:type="inf:SimpleType"><inf:completed>false</inf:completed><inf:typeName>string</inf:typeName></inf:type></inf:particle><inf:comesBefore qname="wms:Keyword" xmlns:wms="http://www.opengis.net/wms"/></inf:content></inf:complexType><inf:complexType><inf:completed>true</inf:completed><inf:mixed>false</inf:mixed><inf:name>Layer_Layer</inf:name><inf:attribute xsi:type="inf:AttributeParticle" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><inf:name>cascaded</inf:name><inf:type xsi:type="inf:SimpleType"><inf:completed>false</inf:completed><inf:typeName>boolean</inf:typeName></inf:type></inf:attribute><inf:attribute xsi:type="inf:AttributeParticle" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><inf:name>opaque</inf:name><inf:type xsi:type="inf:SimpleType"><inf:completed>false</inf:completed><inf:typeName>boolean</inf:typeName></inf:type></inf:attribute><inf:attribute xsi:type="inf:AttributeParticle" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><inf:name>queryable</inf:name><inf:type xsi:type="inf:SimpleType"><inf:completed>false</inf:completed><inf:typeName>boolean</inf:typeName></inf:type></inf:attribute><inf:content xsi:type="inf:SequenceContent" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><inf:completed>true</inf:completed><inf:particle xsi:type="inf:ElementParticle"><inf:name>Name</inf:name><inf:type xsi:type="inf:SimpleType"><inf:completed>false</inf:completed><inf:typeName>string</inf:typeName></inf:type></inf:particle><inf:particle xsi:type="inf:ElementParticle"><inf:name>Title</inf:name><inf:type xsi:type="inf:SimpleType"><inf:completed>false</inf:completed><inf:typeName>string</inf:typeName></inf:type></inf:particle><inf:particle xsi:type="inf:ElementParticle"><inf:name>Abstract</inf:name><inf:type xsi:type="inf:SimpleType"><inf:completed>false</inf:completed><inf:typeName>string</inf:typeName></inf:type></inf:particle><inf:particle xsi:type="inf:ElementParticle"><inf:name>KeywordList</inf:name><inf:type xsi:type="inf:TypeReference"><inf:reference xmlns:wms="http://www.opengis.net/wms">wms:Layer_KeywordList</inf:reference></inf:type></inf:particle><inf:particle xsi:type="inf:ElementParticle"><inf:name>CRS</inf:name><inf:attribute key="maxOccurs" value="18"/><inf:type xsi:type="inf:SimpleType"><inf:completed>false</inf:completed><inf:typeName>string</inf:typeName></inf:type></inf:particle><inf:particle xsi:type="inf:ElementParticle"><inf:name>EX_GeographicBoundingBox</inf:name><inf:type xsi:type="inf:TypeReference"><inf:reference xmlns:wms="http://www.opengis.net/wms">wms:EX_GeographicBoundingBox</inf:reference></inf:type></inf:particle><inf:particle xsi:type="inf:ElementParticle"><inf:name>Style</inf:name><inf:type xsi:type="inf:TypeReference"><inf:reference xmlns:wms="http://www.opengis.net/wms">wms:Layer_Style</inf:reference></inf:type></inf:particle><inf:particle xsi:type="inf:ElementParticle"><inf:name>MaxScaleDenominator</inf:name><inf:type xsi:type="inf:SimpleType"><inf:completed>false</inf:completed><inf:typeName>string</inf:typeName></inf:type></inf:particle><inf:comesBefore qname="wms:Name" xmlns:wms="http://www.opengis.net/wms"><inf:other>wms:Title</inf:other><inf:other>wms:Abstract</inf:other><inf:other>wms:KeywordList</inf:other><inf:other>wms:CRS</inf:other><inf:other>wms:EX_GeographicBoundingBox</inf:other><inf:other>wms:Style</inf:other><inf:other>wms:MaxScaleDenominator</inf:other></inf:comesBefore><inf:comesBefore qname="wms:CRS" xmlns:wms="http://www.opengis.net/wms"><inf:other>wms:EX_GeographicBoundingBox</inf:other><inf:other>wms:Style</inf:other><inf:other>wms:MaxScaleDenominator</inf:other></inf:comesBefore><inf:comesBefore qname="wms:Style" xmlns:wms="http://www.opengis.net/wms"><inf:other>wms:MaxScaleDenominator</inf:other></inf:comesBefore><inf:comesBefore qname="wms:EX_GeographicBoundingBox" xmlns:wms="http://www.opengis.net/wms"><inf:other>wms:Style</inf:other><inf:other>wms:MaxScaleDenominator</inf:other></inf:comesBefore><inf:comesBefore qname="wms:MaxScaleDenominator" xmlns:wms="http://www.opengis.net/wms"/><inf:comesBefore qname="wms:Title" xmlns:wms="http://www.opengis.net/wms"><inf:other>wms:Abstract</inf:other><inf:other>wms:KeywordList</inf:other><inf:other>wms:CRS</inf:other><inf:other>wms:EX_GeographicBoundingBox</inf:other><inf:other>wms:Style</inf:other><inf:other>wms:MaxScaleDenominator</inf:other></inf:comesBefore><inf:comesBefore qname="wms:KeywordList" xmlns:wms="http://www.opengis.net/wms"><inf:other>wms:CRS</inf:other><inf:other>wms:EX_GeographicBoundingBox</inf:other><inf:other>wms:Style</inf:other><inf:other>wms:MaxScaleDenominator</inf:other></inf:comesBefore><inf:comesBefore qname="wms:Abstract" xmlns:wms="http://www.opengis.net/wms"><inf:other>wms:KeywordList</inf:other><inf:other>wms:CRS</inf:other><inf:other>wms:EX_GeographicBoundingBox</inf:other><inf:other>wms:Style</inf:other><inf:other>wms:MaxScaleDenominator</inf:other></inf:comesBefore></inf:content></inf:complexType><inf:complexType><inf:completed>true</inf:completed><inf:mixed>false</inf:mixed><inf:name>HTTP_Get</inf:name><inf:content xsi:type="inf:SequenceContent" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><inf:completed>true</inf:completed><inf:particle xsi:type="inf:ElementParticle"><inf:name>OnlineResource</inf:name><inf:type xsi:type="inf:TypeReference"><inf:reference xmlns:wms="http://www.opengis.net/wms">wms:Get_OnlineResource</inf:reference></inf:type></inf:particle><inf:comesBefore qname="wms:OnlineResource" xmlns:wms="http://www.opengis.net/wms"/></inf:content></inf:complexType><inf:complexType><inf:completed>true</inf:completed><inf:mixed>false</inf:mixed><inf:name>Capabilities_Capability</inf:name><inf:content xsi:type="inf:SequenceContent" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><inf:completed>true</inf:completed><inf:particle xsi:type="inf:ElementParticle"><inf:name>Request</inf:name><inf:type xsi:type="inf:TypeReference"><inf:reference xmlns:wms="http://www.opengis.net/wms">wms:Capability_Request</inf:reference></inf:type></inf:particle><inf:particle xsi:type="inf:ElementParticle"><inf:name>Exception</inf:name><inf:type xsi:type="inf:TypeReference"><inf:reference xmlns:wms="http://www.opengis.net/wms">wms:Capability_Exception</inf:reference></inf:type></inf:particle><inf:particle xsi:type="inf:ReferenceParticle"><inf:reference xmlns:sld="http://www.opengis.net/sld">sld:UserDefinedSymbolization</inf:reference></inf:particle><inf:particle xsi:type="inf:ElementParticle"><inf:name>Layer</inf:name><inf:type xsi:type="inf:TypeReference"><inf:reference xmlns:wms="http://www.opengis.net/wms">wms:Capability_Layer</inf:reference></inf:type></inf:particle><inf:comesBefore qname="wms:Layer" xmlns:wms="http://www.opengis.net/wms"/><inf:comesBefore qname="sld:UserDefinedSymbolization" xmlns:sld="http://www.opengis.net/sld"><inf:other xmlns:wms="http://www.opengis.net/wms">wms:Layer</inf:other></inf:comesBefore><inf:comesBefore qname="wms:Exception" xmlns:wms="http://www.opengis.net/wms"><inf:other xmlns:sld="http://www.opengis.net/sld">sld:UserDefinedSymbolization</inf:other><inf:other>wms:Layer</inf:other></inf:comesBefore><inf:comesBefore qname="wms:Request" xmlns:wms="http://www.opengis.net/wms"><inf:other>wms:Exception</inf:other><inf:other xmlns:sld="http://www.opengis.net/sld">sld:UserDefinedSymbolization</inf:other><inf:other>wms:Layer</inf:other></inf:comesBefore></inf:content></inf:complexType><inf:complexType><inf:completed>true</inf:completed><inf:mixed>false</inf:mixed><inf:name>ContactInformation_ContactPersonPrimary</inf:name><inf:content xsi:type="inf:SequenceContent" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><inf:completed>true</inf:completed><inf:particle xsi:type="inf:ElementParticle"><inf:name>ContactPerson</inf:name><inf:type xsi:type="inf:SimpleType"><inf:completed>false</inf:completed><inf:typeName>string</inf:typeName></inf:type></inf:particle><inf:particle xsi:type="inf:ElementParticle"><inf:name>ContactOrganization</inf:name><inf:type xsi:type="inf:SimpleType"><inf:completed>false</inf:completed><inf:typeName>string</inf:typeName></inf:type></inf:particle><inf:comesBefore qname="wms:ContactPerson" xmlns:wms="http://www.opengis.net/wms"><inf:other>wms:ContactOrganization</inf:other></inf:comesBefore><inf:comesBefore qname="wms:ContactOrganization" xmlns:wms="http://www.opengis.net/wms"/></inf:content></inf:complexType><inf:complexType><inf:completed>true</inf:completed><inf:mixed>false</inf:mixed><inf:name>GetCapabilities_DCPType</inf:name><inf:content xsi:type="inf:SequenceContent" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><inf:completed>true</inf:completed><inf:particle xsi:type="inf:ElementParticle"><inf:name>HTTP</inf:name><inf:type xsi:type="inf:TypeReference"><inf:reference xmlns:wms="http://www.opengis.net/wms">wms:DCPType_HTTP</inf:reference></inf:type></inf:particle><inf:comesBefore qname="wms:HTTP" xmlns:wms="http://www.opengis.net/wms"/></inf:content></inf:complexType><inf:complexType><inf:completed>true</inf:completed><inf:mixed>false</inf:mixed><inf:name>Service_OnlineResource</inf:name><inf:attribute xsi:type="inf:ReferenceParticle" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><inf:reference xmlns:xlin="http://www.w3.org/1999/xlink">xlin:href</inf:reference></inf:attribute><inf:content xsi:type="inf:EmptyContent" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><inf:completed>true</inf:completed></inf:content></inf:complexType><inf:complexType><inf:completed>true</inf:completed><inf:mixed>false</inf:mixed><inf:name>EX_GeographicBoundingBox</inf:name><inf:content xsi:type="inf:SequenceContent" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><inf:completed>true</inf:completed><inf:particle xsi:type="inf:ElementParticle"><inf:name>westBoundLongitude</inf:name><inf:type xsi:type="inf:SimpleType"><inf:completed>false</inf:completed><inf:typeName>decimal</inf:typeName></inf:type></inf:particle><inf:particle xsi:type="inf:ElementParticle"><inf:name>eastBoundLongitude</inf:name><inf:type xsi:type="inf:SimpleType"><inf:completed>false</inf:completed><inf:typeName>decimal</inf:typeName></inf:type></inf:particle><inf:particle xsi:type="inf:ElementParticle"><inf:name>southBoundLatitude</inf:name><inf:type xsi:type="inf:SimpleType"><inf:completed>false</inf:completed><inf:typeName>decimal</inf:typeName></inf:type></inf:particle><inf:particle xsi:type="inf:ElementParticle"><inf:name>northBoundLatitude</inf:name><inf:type xsi:type="inf:SimpleType"><inf:completed>false</inf:completed><inf:typeName>decimal</inf:typeName></inf:type></inf:particle><inf:comesBefore qname="wms:southBoundLatitude" xmlns:wms="http://www.opengis.net/wms"><inf:other>wms:northBoundLatitude</inf:other></inf:comesBefore><inf:comesBefore qname="wms:eastBoundLongitude" xmlns:wms="http://www.opengis.net/wms"><inf:other>wms:southBoundLatitude</inf:other><inf:other>wms:northBoundLatitude</inf:other></inf:comesBefore><inf:comesBefore qname="wms:northBoundLatitude" xmlns:wms="http://www.opengis.net/wms"/><inf:comesBefore qname="wms:westBoundLongitude" xmlns:wms="http://www.opengis.net/wms"><inf:other>wms:eastBoundLongitude</inf:other><inf:other>wms:southBoundLatitude</inf:other><inf:other>wms:northBoundLatitude</inf:other></inf:comesBefore></inf:content></inf:complexType><inf:complexType><inf:completed>true</inf:completed><inf:mixed>false</inf:mixed><inf:name>Request_GetCapabilities</inf:name><inf:content xsi:type="inf:SequenceContent" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><inf:completed>true</inf:completed><inf:particle xsi:type="inf:ElementParticle"><inf:name>Format</inf:name><inf:type xsi:type="inf:SimpleType"><inf:completed>false</inf:completed><inf:typeName>string</inf:typeName></inf:type></inf:particle><inf:particle xsi:type="inf:ElementParticle"><inf:name>DCPType</inf:name><inf:type xsi:type="inf:TypeReference"><inf:reference xmlns:wms="http://www.opengis.net/wms">wms:GetCapabilities_DCPType</inf:reference></inf:type></inf:particle><inf:comesBefore qname="wms:Format" xmlns:wms="http://www.opengis.net/wms"><inf:other>wms:DCPType</inf:other></inf:comesBefore><inf:comesBefore qname="wms:DCPType" xmlns:wms="http://www.opengis.net/wms"/></inf:content></inf:complexType><inf:complexType><inf:completed>true</inf:completed><inf:mixed>false</inf:mixed><inf:name>GetMap_DCPType</inf:name><inf:content xsi:type="inf:SequenceContent" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><inf:completed>true</inf:completed><inf:particle xsi:type="inf:ElementParticle"><inf:name>HTTP</inf:name><inf:type xsi:type="inf:TypeReference"><inf:reference xmlns:wms="http://www.opengis.net/wms">wms:DCPType_HTTP</inf:reference></inf:type></inf:particle><inf:comesBefore qname="wms:HTTP" xmlns:wms="http://www.opengis.net/wms"/></inf:content></inf:complexType><inf:complexType><inf:completed>true</inf:completed><inf:mixed>false</inf:mixed><inf:name>Service_ContactInformation</inf:name><inf:content xsi:type="inf:SequenceContent" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><inf:completed>true</inf:completed><inf:particle xsi:type="inf:ElementParticle"><inf:name>ContactPersonPrimary</inf:name><inf:type xsi:type="inf:TypeReference"><inf:reference xmlns:wms="http://www.opengis.net/wms">wms:ContactInformation_ContactPersonPrimary</inf:reference></inf:type></inf:particle><inf:particle xsi:type="inf:ElementParticle"><inf:name>ContactVoiceTelephone</inf:name><inf:type xsi:type="inf:SimpleType"><inf:completed>false</inf:completed><inf:typeName>string</inf:typeName></inf:type></inf:particle><inf:particle xsi:type="inf:ElementParticle"><inf:name>ContactFacsimileTelephone</inf:name><inf:type xsi:type="inf:SimpleType"><inf:completed>false</inf:completed><inf:typeName>string</inf:typeName></inf:type></inf:particle><inf:particle xsi:type="inf:ElementParticle"><inf:name>ContactElectronicMailAddress</inf:name><inf:type xsi:type="inf:SimpleType"><inf:completed>false</inf:completed><inf:typeName>string</inf:typeName></inf:type></inf:particle><inf:comesBefore qname="wms:ContactPersonPrimary" xmlns:wms="http://www.opengis.net/wms"><inf:other>wms:ContactVoiceTelephone</inf:other><inf:other>wms:ContactFacsimileTelephone</inf:other><inf:other>wms:ContactElectronicMailAddress</inf:other></inf:comesBefore><inf:comesBefore qname="wms:ContactFacsimileTelephone" xmlns:wms="http://www.opengis.net/wms"><inf:other>wms:ContactElectronicMailAddress</inf:other></inf:comesBefore><inf:comesBefore qname="wms:ContactElectronicMailAddress" xmlns:wms="http://www.opengis.net/wms"/><inf:comesBefore qname="wms:ContactVoiceTelephone" xmlns:wms="http://www.opengis.net/wms"><inf:other>wms:ContactFacsimileTelephone</inf:other><inf:other>wms:ContactElectronicMailAddress</inf:other></inf:comesBefore></inf:content></inf:complexType><inf:complexType><inf:completed>true</inf:completed><inf:mixed>false</inf:mixed><inf:name>Get_OnlineResource</inf:name><inf:attribute xsi:type="inf:ReferenceParticle" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><inf:reference xmlns:xlin="http://www.w3.org/1999/xlink">xlin:href</inf:reference></inf:attribute><inf:content xsi:type="inf:EmptyContent" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><inf:completed>true</inf:completed></inf:content></inf:complexType><inf:complexType><inf:completed>true</inf:completed><inf:mixed>false</inf:mixed><inf:name>GetFeatureInfo_DCPType</inf:name><inf:content xsi:type="inf:SequenceContent" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><inf:completed>true</inf:completed><inf:particle xsi:type="inf:ElementParticle"><inf:name>HTTP</inf:name><inf:type xsi:type="inf:TypeReference"><inf:reference xmlns:wms="http://www.opengis.net/wms">wms:DCPType_HTTP</inf:reference></inf:type></inf:particle><inf:comesBefore qname="wms:HTTP" xmlns:wms="http://www.opengis.net/wms"/></inf:content></inf:complexType></inf:schema><inf:schema xmlns:inf="http://www.eviware.com/soapui/InferredSchema"><inf:namespace>http://www.w3.org/1999/xlink</inf:namespace><inf:particle xsi:type="inf:AttributeParticle" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><inf:name>href</inf:name><inf:type xsi:type="inf:SimpleType"><inf:completed>false</inf:completed><inf:typeName>string</inf:typeName></inf:type></inf:particle><inf:particle xsi:type="inf:AttributeParticle" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><inf:name>type</inf:name><inf:type xsi:type="inf:SimpleType"><inf:completed>false</inf:completed><inf:typeName>string</inf:typeName></inf:type></inf:particle><inf:prefix key="http://www.w3.org/2001/XMLSchema" value="xs"/></inf:schema><inf:schema xmlns:inf="http://www.eviware.com/soapui/InferredSchema"><inf:namespace>http://www.opengis.net/sld</inf:namespace><inf:particle xsi:type="inf:ElementParticle" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><inf:name>UserDefinedSymbolization</inf:name><inf:type xsi:type="inf:TypeReference"><inf:reference xmlns:sld="http://www.opengis.net/sld">sld:_UserDefinedSymbolization</inf:reference></inf:type></inf:particle><inf:particle xsi:type="inf:ElementParticle" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><inf:name>DescribeLayer</inf:name><inf:type xsi:type="inf:TypeReference"><inf:reference xmlns:sld="http://www.opengis.net/sld">sld:_DescribeLayer</inf:reference></inf:type></inf:particle><inf:particle xsi:type="inf:ElementParticle" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><inf:name>GetLegendGraphic</inf:name><inf:type xsi:type="inf:TypeReference"><inf:reference xmlns:sld="http://www.opengis.net/sld">sld:_GetLegendGraphic</inf:reference></inf:type></inf:particle><inf:prefix key="http://www.opengis.net/wms" value=""/><inf:prefix key="http://www.w3.org/2001/XMLSchema" value="xs"/><inf:complexType><inf:completed>true</inf:completed><inf:mixed>false</inf:mixed><inf:name>_GetLegendGraphic</inf:name><inf:content xsi:type="inf:SequenceContent" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><inf:completed>true</inf:completed><inf:particle xsi:type="inf:ReferenceParticle"><inf:attribute key="maxOccurs" value="5"/><inf:reference xmlns:wms="http://www.opengis.net/wms">wms:Format</inf:reference></inf:particle><inf:particle xsi:type="inf:ReferenceParticle"><inf:reference xmlns:wms="http://www.opengis.net/wms">wms:DCPType</inf:reference></inf:particle><inf:comesBefore qname="wms:Format" xmlns:wms="http://www.opengis.net/wms"><inf:other>wms:DCPType</inf:other></inf:comesBefore><inf:comesBefore qname="wms:DCPType" xmlns:wms="http://www.opengis.net/wms"/></inf:content></inf:complexType><inf:complexType><inf:completed>true</inf:completed><inf:mixed>false</inf:mixed><inf:name>_DescribeLayer</inf:name><inf:content xsi:type="inf:SequenceContent" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><inf:completed>true</inf:completed><inf:particle xsi:type="inf:ReferenceParticle"><inf:reference xmlns:wms="http://www.opengis.net/wms">wms:Format</inf:reference></inf:particle><inf:particle xsi:type="inf:ReferenceParticle"><inf:reference xmlns:wms="http://www.opengis.net/wms">wms:DCPType</inf:reference></inf:particle><inf:comesBefore qname="wms:Format" xmlns:wms="http://www.opengis.net/wms"><inf:other>wms:DCPType</inf:other></inf:comesBefore><inf:comesBefore qname="wms:DCPType" xmlns:wms="http://www.opengis.net/wms"/></inf:content></inf:complexType><inf:complexType><inf:completed>true</inf:completed><inf:mixed>false</inf:mixed><inf:name>_UserDefinedSymbolization</inf:name><inf:attribute xsi:type="inf:AttributeParticle" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><inf:name>RemoteWCS</inf:name><inf:type xsi:type="inf:SimpleType"><inf:completed>false</inf:completed><inf:typeName>boolean</inf:typeName></inf:type></inf:attribute><inf:attribute xsi:type="inf:AttributeParticle" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><inf:name>RemoteWFS</inf:name><inf:type xsi:type="inf:SimpleType"><inf:completed>false</inf:completed><inf:typeName>boolean</inf:typeName></inf:type></inf:attribute><inf:attribute xsi:type="inf:AttributeParticle" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><inf:name>UserStyle</inf:name><inf:type xsi:type="inf:SimpleType"><inf:completed>false</inf:completed><inf:typeName>positiveInteger</inf:typeName></inf:type></inf:attribute><inf:attribute xsi:type="inf:AttributeParticle" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><inf:name>UserLayer</inf:name><inf:type xsi:type="inf:SimpleType"><inf:completed>false</inf:completed><inf:typeName>boolean</inf:typeName></inf:type></inf:attribute><inf:attribute xsi:type="inf:AttributeParticle" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><inf:name>InlineFeature</inf:name><inf:type xsi:type="inf:SimpleType"><inf:completed>false</inf:completed><inf:typeName>boolean</inf:typeName></inf:type></inf:attribute><inf:attribute xsi:type="inf:AttributeParticle" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><inf:name>SupportSLD</inf:name><inf:type xsi:type="inf:SimpleType"><inf:completed>false</inf:completed><inf:typeName>positiveInteger</inf:typeName></inf:type></inf:attribute><inf:content xsi:type="inf:EmptyContent" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><inf:completed>true</inf:completed></inf:content></inf:complexType></inf:schema><inf:schema xmlns:inf="http://www.eviware.com/soapui/InferredSchema"><inf:namespace>http://mapserver.gis.umn.edu/mapserver</inf:namespace><inf:particle xsi:type="inf:ElementParticle" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><inf:name>GetStyles</inf:name><inf:type xsi:type="inf:TypeReference"><inf:reference xmlns:map="http://mapserver.gis.umn.edu/mapserver">map:_GetStyles</inf:reference></inf:type></inf:particle><inf:prefix key="http://www.opengis.net/wms" value=""/><inf:prefix key="http://www.w3.org/2001/XMLSchema" value="xs"/><inf:complexType><inf:completed>true</inf:completed><inf:mixed>false</inf:mixed><inf:name>_GetStyles</inf:name><inf:content xsi:type="inf:SequenceContent" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><inf:completed>true</inf:completed><inf:particle xsi:type="inf:ReferenceParticle"><inf:reference xmlns:wms="http://www.opengis.net/wms">wms:Format</inf:reference></inf:particle><inf:particle xsi:type="inf:ReferenceParticle"><inf:reference xmlns:wms="http://www.opengis.net/wms">wms:DCPType</inf:reference></inf:particle><inf:comesBefore qname="wms:Format" xmlns:wms="http://www.opengis.net/wms"><inf:other>wms:DCPType</inf:other></inf:comesBefore><inf:comesBefore qname="wms:DCPType" xmlns:wms="http://www.opengis.net/wms"/></inf:content></inf:complexType></inf:schema></xml-fragment>]]></con:inferredSchema></con:interface><con:testSuite name="TestSetup" id="bdc92a2d-7e1d-4544-9bec-b65195a460fe"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Requirements" searchProperties="true" id="4e183189-f8a1-4596-96af-79fbda135655"><con:settings/><con:properties><con:property><con:name>M-CR-V01##IR.1__Name</con:name><con:value>Implement ISO19128 WMS version shall be 1.3.0</con:value></con:property><con:property><con:name>M-CR-V01##IR.1__Reference</con:name><con:value>TG IR 1, ISO19128, WMS 1.3.0</con:value></con:property><con:property><con:name>M-CR-V01##R.10b__Description</con:name><con:value>WMS Abstract present in Capabilities</con:value></con:property><con:property><con:name>M-CR-V01##R.10b__Name</con:name><con:value>WMS Abstract present</con:value></con:property><con:property><con:name>M-CR-V01##R.10b__Reference</con:name><con:value>TG Requirement 10</con:value></con:property><con:property><con:name>M-CR-V01##R.10__Description</con:name><con:value>WMS Title present in Capabilities</con:value></con:property><con:property><con:name>M-CR-V01##R.10__Name</con:name><con:value>WMS Title present</con:value></con:property><con:property><con:name>M-CR-V01##R.10__Reference</con:name><con:value>TG Requirement 10</con:value></con:property><con:property><con:name>M-CR-V01##R.11__Description</con:name><con:value>INSPIRE Resource Type is present in the ExtendedCapabilities</con:value></con:property><con:property><con:name>M-CR-V01##R.11__Name</con:name><con:value>INSPIRE Resource Type</con:value></con:property><con:property><con:name>M-CR-V01##R.11__Reference</con:name><con:value>TG Requirement 10</con:value></con:property><con:property><con:name>M-CR-V01##R.16.R.18__Description</con:name><con:value>INSPIRE MandatoryKeyword infoMapAccessService is present in Capabilities Keywords</con:value></con:property><con:property><con:name>M-CR-V01##R.16.R.18__Name</con:name><con:value>INSPIRE MandatoryKeyword infoMapAccessService</con:value></con:property><con:property><con:name>M-CR-V01##R.16.R.18__Reference</con:name><con:value>TG Requirement 10, 16, 18</con:value></con:property><con:property><con:name>M-CR-V01##R.24__Description</con:name><con:value>INSPIRE Conditions for Access and Use (wms:Fees) present in Capabilities</con:value></con:property><con:property><con:name>M-CR-V01##R.24__Name</con:name><con:value>INSPIRE Conditions for Access and Use (wms:Fees)</con:value></con:property><con:property><con:name>M-CR-V01##R.24__Reference</con:name><con:value>TG Requirement 24</con:value></con:property><con:property><con:name>M-CR-V01##R.25.R.26__Description</con:name><con:value>INSPIRE Responsible Organization present in Capabilities (wms:ContactOrganization and wms:ContactPosition)</con:value></con:property><con:property><con:name>M-CR-V01##R.25.R.26__Name</con:name><con:value>INSPIRE Responsible Organization present</con:value></con:property><con:property><con:name>M-CR-V01##R.25.R.26__Reference</con:name><con:value>TG Requirement 25, 26</con:value></con:property><con:property><con:name>M-CR-V01##R.31__Description</con:name><con:value>The Capabilities advertize image/png and/or image/gif in the Capabilities as formats for GetMap</con:value></con:property><con:property><con:name>M-CR-V01##R.31__Name</con:name><con:value>INSPIRE GetMap Supports PNG or GIF</con:value></con:property><con:property><con:name>M-CR-V01##R.31__Reference</con:name><con:value>TG Requirement 31</con:value></con:property><con:property><con:name>M-CR-V01##R.32.R.33__Description</con:name><con:value>INSPIRE Resource Title: all Layers with a Name have a Title. </con:value></con:property><con:property><con:name>M-CR-V01##R.32.R.33__Name</con:name><con:value>INSPIRE Resource Title: all Layers with a Name have a Title</con:value></con:property><con:property><con:name>M-CR-V01##R.32.R.33__Reference</con:name><con:value>TG Requirement 32, 33</con:value></con:property><con:property><con:name>M-CR-V01##R.32.R.34__Description</con:name><con:value>INSPIRE Resource Abstract: all Layers with a Name have an Abstract</con:value></con:property><con:property><con:name>M-CR-V01##R.32.R.34__Name</con:name><con:value>INSPIRE Resource Abstract: all Layers with a Name have an Abstract</con:value></con:property><con:property><con:name>M-CR-V01##R.32.R.34__Reference</con:name><con:value>TG Requirement 32, 34</con:value></con:property><con:property><con:name>M-CR-V01##R.32.R.35__Description</con:name><con:value>INSPIRE Resource Keyword: all Layers with a Name have at least one Keyword</con:value></con:property><con:property><con:name>M-CR-V01##R.32.R.35__Name</con:name><con:value>INSPIRE Resource Keyword: all Layers with a Name have at least one Keyword</con:value></con:property><con:property><con:name>M-CR-V01##R.32.R.35__Reference</con:name><con:value>TG Requirement 32, 35</con:value></con:property><con:property><con:name>M-CR-V01##R.32.R.36__Description</con:name><con:value>INSPIRE Ex_GeographicBoundingBox: all Layers with a Name have a EX_GeographicBoundingBox</con:value></con:property><con:property><con:name>M-CR-V01##R.32.R.36__Name</con:name><con:value>INSPIRE Ex_GeographicBoundingBox: all Layers with a Name have a EX_GeographicBoundingBox</con:value></con:property><con:property><con:name>M-CR-V01##R.32.R.36__Reference</con:name><con:value>TG Requirement 32, 36</con:value></con:property><con:property><con:name>M-CR-V01##R.33__Description</con:name><con:value>INSPIRE Theme is mapped to a Keyword</con:value></con:property><con:property><con:name>M-CR-V01##R.33__Name</con:name><con:value>INSPIRE Theme is mapped to a Keyword</con:value></con:property><con:property><con:name>M-CR-V01##R.33__Reference</con:name><con:value>TG Requirement 33</con:value></con:property><con:property><con:name>M-CR-V01##R.36__Description</con:name><con:value>INSPIRE BoundingBox: all Layers with a Name have BoundingBoxes for all advertized CRSes</con:value></con:property><con:property><con:name>M-CR-V01##R.36__Name</con:name><con:value>INSPIRE BoundingBox: all Layers with a Name have BoundingBoxes for all advertized CRSes</con:value></con:property><con:property><con:name>M-CR-V01##R.36__Reference</con:name><con:value>TG Requirement 36</con:value></con:property><con:property><con:name>M-CR-V01##R.37.R.38__Description</con:name><con:value>INSPIRE Resource Identifier: all Layers with a Name have an Identifier and a declared Authority for that Identifier</con:value></con:property><con:property><con:name>M-CR-V01##R.37.R.38__Name</con:name><con:value>INSPIRE Resource Identifier: all Layers with a Name have an Identifier and a declared Authority for that Identifier</con:value></con:property><con:property><con:name>M-CR-V01##R.37.R.38__Reference</con:name><con:value>TG Requirement 37, 38</con:value></con:property><con:property><con:name>M-CR-V01##R.41R.46__Description</con:name><con:value>INSPIRE Styles: all Styles have a Name and Title</con:value></con:property><con:property><con:name>M-CR-V01##R.41R.46__Name</con:name><con:value>INSPIRE Styles: all Styles have a Name and Title</con:value></con:property><con:property><con:name>M-CR-V01##R.41R.46__Reference</con:name><con:value>TG Requirement 41, 46</con:value></con:property><con:property><con:name>M-CR-V01##R.6__Description</con:name><con:value>The Service Metadata has ISO Metadata Root element (gmd:MD_Metadata exists)</con:value></con:property><con:property><con:name>M-CR-V01##R.6__Name</con:name><con:value>The Service Metadata has proper XML Root element</con:value></con:property><con:property><con:name>M-CR-V01##R.6__Reference</con:name><con:value>ISO 19139</con:value></con:property><con:property><con:name>M-CR-V01##R.70__Description</con:name><con:value>INSPIRE ResponseLanguage present</con:value></con:property><con:property><con:name>M-CR-V01##R.70__Name</con:name><con:value>INSPIRE ResponseLanguage present</con:value></con:property><con:property><con:name>M-CR-V01##R.70__Reference</con:name><con:value>TG Requirement 70</con:value></con:property><con:property><con:name>M-CR-V01##R.71__Description</con:name><con:value>INSPIRE DefaultLanguage present</con:value></con:property><con:property><con:name>M-CR-V01##R.71__Name</con:name><con:value>INSPIRE DefaultLanguage present</con:value></con:property><con:property><con:name>M-CR-V01##R.71__Reference</con:name><con:value>TG Requirement 71</con:value></con:property><con:property><con:name>M-CR-V01##R.8.R.9b__Description</con:name><con:value>Capabilities implement the extended metadata. Validate to declared XML Schema (xsi:schemaLocation)</con:value></con:property><con:property><con:name>M-CR-V01##R.8.R.9b__Name</con:name><con:value>Capabilities implement the extended metadata.</con:value></con:property><con:property><con:name>M-CR-V01##R.8.R.9b__Reference</con:name><con:value>TG Requirement 8, 9</con:value></con:property><con:property><con:name>M-CR-V01##R.8.R.9__Description</con:name><con:value>Capabilities implement the extended metadata. Validate to INSPIRE Schema http://inspire.ec.europa.eu/schemas/inspire_vs/1.0/inspire_vs.xsd</con:value></con:property><con:property><con:name>M-CR-V01##R.8.R.9__Name</con:name><con:value>Capabilities implement the extended metadata.</con:value></con:property><con:property><con:name>M-CR-V01##R.8.R.9__Reference</con:name><con:value>TG Requirement 8, 9</con:value></con:property><con:property><con:name>M-CR-V01##StylesPresent__Description</con:name><con:value>All Layers with a Name have a Style</con:value></con:property><con:property><con:name>M-CR-V01##StylesPresent__Name</con:name><con:value>All Layers with a Name have a Style</con:value></con:property><con:property><con:name>M-CR-V01##StylesPresent__Reference</con:name><con:value>TG Requirement 46</con:value></con:property><con:property><con:name>M-CR-V01__Description</con:name><con:value>Test a WMS on INSPIRE View Services (version 3.11) Technical Guidance requirements, Get View Service Metadata and Link View Service Mandatory</con:value></con:property><con:property><con:name>M-CR-V01__Name</con:name><con:value>Get View Service Metadata and Link View Service Mandatory</con:value></con:property><con:property><con:name>M-CR-V01__Reference</con:name><con:value>Implementing Rule Network Services, Technical Guidance View Services 3.11</con:value></con:property><con:property><con:name>M-CR-V04##R.50-57__Description</con:name><con:value>Valid GetMap response: PNG is returned when valid GetMap request is sent</con:value></con:property><con:property><con:name>M-CR-V04##R.50-57__Name</con:name><con:value>Valid GetMap response</con:value></con:property><con:property><con:name>M-CR-V04##R.50-57__Reference</con:name><con:value>TG Requirements 50-57</con:value></con:property><con:property><con:name>M-CR-V04##R.58__Description</con:name><con:value>Valid GetMap response: PNG is returned when TRANSPARENT is used in the GetMap request</con:value></con:property><con:property><con:name>M-CR-V04##R.58__Name</con:name><con:value>Valid GetMap response TRANSPARENT</con:value></con:property><con:property><con:name>M-CR-V04##R.58__Reference</con:name><con:value>TG Requirement 58</con:value></con:property><con:property><con:name>M-CR-V04##R.59__Exception</con:name><con:value>EXCEPTIONS format is XML by default. An invalid request returns an exception report in XML format</con:value></con:property><con:property><con:name>M-CR-V04##R.59__Name</con:name><con:value>EXCEPTIONS format is XML</con:value></con:property><con:property><con:name>M-CR-V04##R.59__Reference</con:name><con:value>TG Requirement 59</con:value></con:property><con:property><con:name>M-CR-V10##fileIdentifier__Description</con:name><con:value>A Metadata document (as referenced in the Capabilities) has a fileIdentifier to uniquely identify the record.</con:value></con:property><con:property><con:name>M-CR-V10##fileIdentifier__Name</con:name><con:value>Metadata fileIdentifier exists</con:value></con:property><con:property><con:name>M-CR-V10##MD_IdentifierExists__Description</con:name><con:value>The MD_Identifier exists in the ServiceMetadata, operatesOn</con:value></con:property><con:property><con:name>M-CR-V10##MD_IdentifierExists__Name</con:name><con:value>The MD_Identifier exists in the ServiceMetadata</con:value></con:property><con:property><con:name>M-CR-V10##MD_IdentifierExists__Reference</con:name><con:value>INSPIRE Metadata Implementing Rules: 2.2.6 Coupled resource</con:value></con:property><con:property><con:name>M-CR-V10##MD_Metadata__Description</con:name><con:value>A Metadata document (as referenced in the Capabilities) has root element MD_Metadata</con:value></con:property><con:property><con:name>M-CR-V10##MD_Metadata__Name</con:name><con:value>Metadata has root element MD_Metadata </con:value></con:property><con:property><con:name>M-CR-V10##MD_Metadata__Reference</con:name><con:value>ISO 19139, INSPIRE Metadata Implementing Rules</con:value></con:property><con:property><con:name>M-CR-V10##MetadataURLexists__Description</con:name><con:value>At least one MetadataURL exists. This must be the case, because a WMS must 1) offer Layers and 2) INSPIRE requires Layers to be described. If the WMS offers at least 1 INSPIRE Layer, there must be a MetadataURL</con:value></con:property><con:property><con:name>M-CR-V10##MetadataURLexists__Name</con:name><con:value>At least one MetadataURL exists</con:value></con:property><con:property><con:name>M-CR-V10##MetadataURLexists__Reference</con:name><con:value>TG Requirement 13, 14</con:value></con:property><con:property><con:name>M-CR-V11##StylesLegendURLs__Description</con:name><con:value>INSPIRE Styles: all Styles have a LegendURL</con:value></con:property><con:property><con:name>M-CR-V11##StylesLegendURLs__Name</con:name><con:value>INSPIRE Styles: all Styles have a LegendURL</con:value></con:property><con:property><con:name>M-CR-V11##StylesLegendURLs__Reference</con:name><con:value>TG Requirement 32</con:value></con:property><con:property><con:name>O-CR-V02##R.39__Description</con:name><con:value>INSPIRE there is a harmonized Layer Name available</con:value></con:property><con:property><con:name>O-CR-V02##R.39__Name</con:name><con:value>INSPIRE there is a harmonized Layer Name available</con:value></con:property><con:property><con:name>O-CR-V02##R.39__Reference</con:name><con:value>TG Requirement 39</con:value></con:property><con:property><con:name>O-CR-V02##R.40__Description</con:name><con:value>INSPIRE Coordinate Reference System 4258 in Layer or group Layer</con:value></con:property><con:property><con:name>O-CR-V02##R.40__Name</con:name><con:value>INSPIRE Coordinate Reference System 4258 in Layer or group Layer</con:value></con:property><con:property><con:name>O-CR-V02##R.40__Reference</con:name><con:value>TG Requirement 40</con:value></con:property><con:property><con:name>O-CR-V05##BGCOLOR__Description</con:name><con:value>Valid image when BGCOLOR paramater is used</con:value></con:property><con:property><con:name>O-CR-V05##BGCOLOR__Name</con:name><con:value>Valid image with BGCOLOR</con:value></con:property><con:property><con:name>O-CR-V05##BGCOLOR__Reference</con:name><con:value>TG Section 4.2.4.1.1.10</con:value></con:property><con:property><con:name>O-CR-V05##INIMAGE__Description</con:name><con:value>EXCEPTIONS format is INIMAGE or XML (default). An invalid request returns an exception report in INIMAGE or XML format</con:value></con:property><con:property><con:name>O-CR-V05##INIMAGE__Name</con:name><con:value>EXCEPTIONS format INIMAGE</con:value></con:property><con:property><con:name>O-CR-V05##INIMAGE__Reference</con:name><con:value>TG Requirement 59</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Transfer Global Properties" searchProperties="true" id="2a859022-7e49-4d80-9a3f-681ed0472b53"><con:settings/><con:testStep type="transfer" name="Transfer Global Properties" id="cc61c8a6-6c3e-4fb3-b4f9-3bdc4e2315d8"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="false" transferTextContent="true" failOnError="false" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false" disabled="false"><con:name>endPoint</con:name><con:sourceType>VS.serviceEndpoint</con:sourceType><con:sourceStep>#Global#</con:sourceStep><con:targetType>serviceEndpoint</con:targetType><con:targetStep>#Project#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" disabled="false" entitize="false" ignoreEmpty="true" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>basicAuthUser</con:name><con:sourceType>VS.basicAuthUser</con:sourceType><con:sourceStep>#Global#</con:sourceStep><con:sourcePath xsi:nil="true"/><con:targetType>authUser</con:targetType><con:targetStep>#Project#</con:targetStep><con:targetPath xsi:nil="true"/><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" disabled="false" entitize="false" ignoreEmpty="true" transferChildNodes="false" transferToAll="false" useXQuery="false"><con:name>basicAuthPwd</con:name><con:sourceType>VS.basicAuthPwd</con:sourceType><con:sourceStep>#Global#</con:sourceStep><con:sourcePath xsi:nil="true"/><con:targetType>authPwd</con:targetType><con:targetStep>#Project#</con:targetStep><con:targetPath xsi:nil="true"/><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="true" transferToAll="false" entitize="false" transferChildNodes="false" useXQuery="false" disabled="false"><con:name>layer</con:name><con:sourceType>VS.LAYER</con:sourceType><con:sourceStep>#Global#</con:sourceStep><con:targetType>layer</con:targetType><con:targetStep>#Project#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" transferToAll="false" transferChildNodes="false" ignoreEmpty="true" useXQuery="false" disabled="false" entitize="false"><con:name>minlat</con:name><con:sourceType>VS.minlat</con:sourceType><con:sourceStep>#Global#</con:sourceStep><con:targetType>minlat</con:targetType><con:targetStep>#Project#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="true" transferToAll="false" entitize="false" disabled="false"><con:name>minlon</con:name><con:sourceType>VS.minlon</con:sourceType><con:sourceStep>#Global#</con:sourceStep><con:targetType>minlon</con:targetType><con:targetStep>#Project#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="true" useXQuery="false" transferChildNodes="false" disabled="false"><con:name>maxlat</con:name><con:sourceType>VS.maxlat</con:sourceType><con:sourceStep>#Global#</con:sourceStep><con:targetType>maxlat</con:targetType><con:targetStep>#Project#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="true" transferToAll="false" entitize="false" disabled="false"><con:name>maxlon</con:name><con:sourceType>VS.maxlon</con:sourceType><con:sourceStep>#Global#</con:sourceStep><con:targetType>maxlon</con:targetType><con:targetStep>#Project#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="false" transferTextContent="true" failOnError="false" ignoreEmpty="true" useXQuery="false" transferChildNodes="false" transferToAll="false" entitize="false" disabled="false"><con:name>bbox</con:name><con:sourceType>VS.BBOX</con:sourceType><con:sourceStep>#Global#</con:sourceStep><con:targetType>bbox</con:targetType><con:targetStep>#Project#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Update Credentials" searchProperties="true" id="8b9aa68d-9d0a-4d57-a0ba-8d9b9b1c40b7"><con:settings/><con:testStep type="groovy" name="Update Credentials" id="64fd1c54-0d51-4895-8d70-9186508892ac"><con:settings/><con:config><script>import de.interactive_instruments.xtf.Util;

/** Set the credentials only if a username is provided */
def basicAuthUser = context.expand('${#Project#authUser}');
if (basicAuthUser.length()>0) {
	log.info("Setting credentials for user: " + basicAuthUser);
}
Util.updateCredentials(testRunner);
</script></con:config></con:testStep><con:properties/></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Update Query Params" searchProperties="true" id="2789c834-b618-4c29-9bfa-c96affd9cf6a"><con:settings/><con:testStep type="groovy" name="UpdateQueryParams" id="f2f82289-2fcb-410a-91ff-082c0ddafcd8"><con:settings/><con:config><script>// if any non-WMS parameters are found, add them to the GetCapabilities request
// author: Thijs Brentjens

import com.eviware.soapui.impl.wsdl.teststeps.*;

c = testRunner.getRunContext();

URL endpoint = new URL(c.expand('${#Project#serviceEndpoint}'));
if (endpoint.getQuery()) {
    def queryParams = endpoint.getQuery().split("&amp;");

    // default params for GetCapabilities:
    // filter out version
    def defaultParamsGetCaps = ["acceptversions","service","request","language"];

    for (p in queryParams) {
        for (d in defaultParamsGetCaps) {
            if (p.split("=")[0].toLowerCase() == d) {
                queryParams = queryParams - p;
            }
        }
        log.debug("Queryparams from serviceEndpoint cleaned. Aditional queryparams left: " + queryParams);
    }

    // For REST requests, add additional query parameters
    // Here for GetCapabilities only
    if (queryParams.length > 0) {
        // for GetCapabilities: update all requests with other parameters from the serviceEndpoint
        for( testSuite in testRunner.testCase.testSuite.project.getTestSuiteList() ) {
            for( testCase in testSuite.getTestCaseList() ) {
                for( testStep in testCase.getTestStepList() ) {
                    if( testStep instanceof HttpTestRequestStep ) {
                        // First: cleanup old extra params, if the tests have been saved with aditional params a previous time
                       def getCapsReq = false;
                        for (prop in testStep.getHttpRequest().getProperties()) {
                        	       if (prop.getValue().getValue()=="GetCapabilities") {
                                	getCapsReq = true;
                                }
                            }
                        if (getCapsReq) {
                            // first remove any other params
                            for (prop in testStep.getHttpRequest().getProperties()) {
                                    defaultParam = 0;
                                    log.debug("HTTP param: " + prop.getKey())
                                    for (d in defaultParamsGetCaps) {
                                    if (prop.getKey().toLowerCase() == d) {
                                        defaultParam = 1;
                                    }
                                }
                                // if not a defaultParam, remove it
                                if (defaultParam == 0) {
                                        testStep.getHttpRequest().removeProperty(prop.getKey());
                                        log.debug("Removed non-standard query parameter from the request: " + prop.getKey())
                                }
                            }
                            // now add the extra params from the query string
                            for (q in queryParams) {
                                    def pair = q.split("=");
                                    testStep.getHttpRequest().addProperty(pair[0]);
                                    testStep.getHttpRequest().setPropertyValue(pair[0], pair[1]);
                                    log.debug("Added non-standard query parameter for the Getcapabilities requests: " + pair[0] + "=" + pair[1])
                            }
                        }
                    }
                }
            }
        };
    }

}

</script></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite name="M-CR-V01 - Get View Service Metadata and Link View Service Mandatory" id="766d2642-acc7-4a96-8fc3-86f86bace243"><con:description>For various combinations of valid mandatory request parameters validate
 that the view service returns a valid XML file, checked against the WMS
1.3.0 GetCapabilties Response schema.</con:description><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Test Mandatory WMS GetCapabilities Parameters" searchProperties="true" id="ca38c417-76c9-48f3-a69e-945beb859d0c" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="properties" name="Properties" id="bc49b6e9-d8b0-4226-940c-e385afa73630"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>firstlayer</con:name><con:value>0</con:value></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="GetCapabilities" id="51d8c93c-3b60-4dfc-ba04-375a720f39a5"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="GetCapabilities" id="d3563bfe-fa45-40d5-965a-fbd97b80d918" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#serviceEndpoint}</con:endpoint><con:request/><con:assertion type="Response SLA Assertion" name="Response SLA" id="dbc8fd2a-392c-4e75-a832-cae607cff35f"><con:configuration><SLA>5000</SLA></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Timeout" id="ade1b20d-69ef-4d31-9e05-c91a53c20e10"><con:configuration><scriptText>// check response time
log.info( "time taken was :" + messageExchange.timeTaken );

</scriptText></con:configuration></con:assertion><con:assertion type="XQuery Match" name="M-CR-V01##IR.1: WMS Version is 1.3.0" id="928576b1-9cfd-48fe-ad71-8d700cc4775a"><con:configuration><path>declare namespace wms='http://www.opengis.net/wms';

&lt;result>AssertionFailures:
{
let $v := /wms:WMS_Capabilities[@version='1.3.0']
return
if (exists($v))
then ""
else " No valid WMS Capabilities or version provided."
}
&lt;/result></path><content>&lt;result>AssertionFailures:&lt;/result></content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>ACCEPTVERSIONS</con:name><con:value>1.3.0</con:value></con:parameter><con:parameter><con:name>SERVICE</con:name><con:value>WMS</con:value></con:parameter><con:parameter><con:name>REQUEST</con:name><con:value>GetCapabilities</con:value></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="7cb544f3-89c7-4627-b9c9-ce03b3df2fad"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>firstlayer</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>GetCapabilities</con:sourceStep><con:sourcePath>declare namespace wms='http://www.opengis.net/wms';
(//wms:Layer[wms:Name and empty(./wms:Layer[exists(wms:Name)]) and (ancestor-or-self::wms:Layer/wms:BoundingBox/@CRS='EPSG:4258' or ancestor-or-self::wms:Layer/wms:BoundingBox/@CRS='EPSG:4326' or ancestor-or-self::wms:Layer/wms:BoundingBox/@CRS='CRS:84')][1]/wms:Name)[1]</con:sourcePath><con:targetType>firstlayercapabilities</con:targetType><con:targetStep>#Project#</con:targetStep><con:targetPath/><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" ignoreEmpty="false" useXQuery="false" transferChildNodes="false"><con:name>layerlist</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>GetCapabilities</con:sourceStep><con:sourcePath>declare namespace wms='http://www.opengis.net/wms';
string-join(//wms:Layer[wms:Name and (ancestor-or-self::wms:Layer/wms:BoundingBox/@CRS='EPSG:4258' or ancestor-or-self::wms:Layer/wms:BoundingBox/@CRS='EPSG:4326' or ancestor-or-self::wms:Layer/wms:BoundingBox/@CRS='CRS:84')][1]/wms:Name,',')</con:sourcePath><con:targetType>layerList</con:targetType><con:targetStep>#Project#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" ignoreEmpty="false" useXQuery="false" transferChildNodes="false" transferToAll="false"><con:name>getMapUrl</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>GetCapabilities</con:sourceStep><con:sourcePath>declare namespace wms='http://www.opengis.net/wms';
declare namespace xlink='http://www.w3.org/1999/xlink';
/wms:WMS_Capabilities/wms:Capability/wms:Request/wms:GetMap/wms:DCPType/wms:HTTP/wms:Get/wms:OnlineResource/@xlink:href</con:sourcePath><con:targetType>getMapUrl</con:targetType><con:targetStep>#Project#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" entitize="false" transferToAll="false" useXQuery="false" transferChildNodes="false" ignoreEmpty="false"><con:name>metadataUrl</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>GetCapabilities</con:sourceStep><con:sourcePath>declare namespace wms='http://www.opengis.net/wms';
declare namespace xlink='http://www.w3.org/1999/xlink';
/wms:WMS_Capabilities/wms:Capability[1]/wms:Layer[1]/wms:Layer[1]/wms:MetadataURL[1]/wms:OnlineResource[1]/@xlink:href</con:sourcePath><con:targetType>metadataUrl</con:targetType><con:targetStep>#Project#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" useXQuery="false" transferChildNodes="false" transferToAll="false" entitize="false"><con:name>firstlayercrs</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>GetCapabilities</con:sourceStep><con:sourcePath>declare namespace wms='http://www.opengis.net/wms';
(//wms:Layer[wms:Name='${#Project#firstlayercapabilities}'][1]/ancestor-or-self::wms:Layer/wms:BoundingBox[@CRS='EPSG:4258' or @CRS='EPSG:4326' or @CRS='CRS:84'][1]/@CRS)[1]</con:sourcePath><con:targetType>firstlayercrs</con:targetType><con:targetStep>#Project#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" ignoreEmpty="false" useXQuery="false" transferChildNodes="false"><con:name>minlon</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>GetCapabilities</con:sourceStep><con:sourcePath>declare namespace wms='http://www.opengis.net/wms';
(//wms:Layer[wms:Name='${#Project#firstlayercapabilities}'][1]/ancestor-or-self::wms:Layer/wms:BoundingBox[@CRS='${#Project#firstlayercrs}'][1]/@minx)[1]</con:sourcePath><con:targetType>minlon</con:targetType><con:targetStep>#Project#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true"><con:name>minlat</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>GetCapabilities</con:sourceStep><con:sourcePath>declare namespace wms='http://www.opengis.net/wms';
(//wms:Layer[wms:Name='${#Project#firstlayercapabilities}'][1]/ancestor-or-self::wms:Layer/wms:BoundingBox[@CRS='${#Project#firstlayercrs}'][1]/@miny)[1]</con:sourcePath><con:targetType>minlat</con:targetType><con:targetStep>#Project#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false" ignoreEmpty="false" useXQuery="false" transferChildNodes="false"><con:name>maxlon</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>GetCapabilities</con:sourceStep><con:sourcePath>declare namespace wms='http://www.opengis.net/wms';
(//wms:Layer[wms:Name='${#Project#firstlayercapabilities}'][1]/ancestor-or-self::wms:Layer/wms:BoundingBox[@CRS='${#Project#firstlayercrs}'][1]/@maxx)[1]</con:sourcePath><con:targetType>maxlon</con:targetType><con:targetStep>#Project#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" transferToAll="false" entitize="false"><con:name>maxlat</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>GetCapabilities</con:sourceStep><con:sourcePath>declare namespace wms='http://www.opengis.net/wms';
(//wms:Layer[wms:Name='${#Project#firstlayercapabilities}'][1]/ancestor-or-self::wms:Layer/wms:BoundingBox[@CRS='${#Project#firstlayercrs}'][1]/@maxy)[1]</con:sourcePath><con:targetType>maxlat</con:targetType><con:targetStep>#Project#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" useXQuery="false" transferToAll="false" entitize="false"><con:name>projectbboxnew</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>GetCapabilities</con:sourceStep><con:sourcePath>declare namespace wms='http://www.opengis.net/wms';
concat('${#Project#minlon}',',','${#Project#minlat}',',','${#Project#maxlon}',',','${#Project#maxlat}')</con:sourcePath><con:targetType>bbox</con:targetType><con:targetStep>#Project#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" entitize="false"><con:name>getCapabilitiesUrl</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>GetCapabilities</con:sourceStep><con:sourcePath>declare namespace wms='http://www.opengis.net/wms';
declare namespace xlink='http://www.w3.org/1999/xlink';
/wms:WMS_Capabilities/wms:Capability/wms:Request/wms:GetCapabilities/wms:DCPType/wms:HTTP/wms:Get/wms:OnlineResource/@xlink:href</con:sourcePath><con:targetType>getCapabilitiesURL</con:targetType><con:targetStep>#Project#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="false" transferTextContent="true" failOnError="false" entitize="false" transferToAll="false" useXQuery="false" ignoreEmpty="true"><con:name>firstlayerstyle</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>GetCapabilities</con:sourceStep><con:sourcePath>declare namespace wms='http://www.opengis.net/wms';

(//wms:Layer[wms:Name='${#Project#firstlayercapabilities}'][1]/ancestor-or-self::wms:Layer/wms:Style[1]/wms:Name)[1]</con:sourcePath><con:targetType>firstlayerstyle</con:targetType><con:targetStep>#Project#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="UpdateQueryParams-Getmap" id="301b16d7-17c4-4325-a143-b44b09ee3862"><con:settings/><con:config><script>// if any non-WMS parameters are found, add them to the GetMap requests
// author: Thijs Brentjens

import com.eviware.soapui.impl.wsdl.teststeps.*;

c = testRunner.getRunContext();

URL endpoint = new URL(c.expand('${#Project#getMapUrl}'));
if (endpoint.getQuery()) {
    def queryParams = endpoint.getQuery().split("&amp;");


    // default params for GetMap:
    // filter out version
    def defaultParamsGetMap = ["version","service","request","language","bgcolor","crs","bbox","height","styles","width","height","transparent","exceptions","format","layers","srs"];

    for (p in queryParams) {
        for (d in defaultParamsGetMap) {
            if (p.split("=")[0].toLowerCase() == d) {
                queryParams = queryParams - p;
            }
        }
        log.debug("Queryparams from getMapUrl cleaned. Aditional queryparams left: " + queryParams);
    }

    // For REST requests, add additional query parameters
    // Here for GetCapabilities only
    if (queryParams.length > 0) {
        // for GetCapabilities: update all requests with other parameters from the serviceEndpoint
        for( testSuite in testRunner.testCase.testSuite.project.getTestSuiteList() ) {
            for( testCase in testSuite.getTestCaseList() ) {
                for( testStep in testCase.getTestStepList() ) {
                    if( testStep instanceof HttpTestRequestStep ) {
                        // First: cleanup old extra params, if the tests have been saved with aditional params a previous time
                       def getMapReq = false;
                        for (prop in testStep.getHttpRequest().getProperties()) {
                        	       if (prop.getValue().getValue()=="GetMap" || prop.getValue().getValue()=="BREAKME") {
                                	getMapReq = true;
                                }
                            }
                        if (getMapReq) {
                            // first remove any other params
                            for (prop in testStep.getHttpRequest().getProperties()) {
                                    defaultParam = 0;
                                    log.debug("HTTP param: " + prop.getKey())
                                    for (d in defaultParamsGetMap) {
                                    if (prop.getKey().toLowerCase() == d) {
                                        defaultParam = 1;
                                    }
                                }
                                // if not a defaultParam, remove it
                                if (defaultParam == 0) {
                                        testStep.getHttpRequest().removeProperty(prop.getKey());
                                        log.debug("Removed non-standard query parameter from the request: " + prop.getKey())
                                }
                            }
                            // now add the extra params from the query string
                            for (q in queryParams) {
                                    def pair = q.split("=");
                                    testStep.getHttpRequest().addProperty(pair[0]);
                                    testStep.getHttpRequest().setPropertyValue(pair[0], pair[1]);
                                    log.debug("Added non-standard query parameter for the GetMap requests: " + pair[0] + "=" + pair[1])
                            }
                        }
                    }
                }
            }
        };
    }
}</script></con:config></con:testStep><con:properties><con:property><con:name>MAIN_TESTSTEP</con:name><con:value>GetCapabilities</con:value></con:property><con:property><con:name>save_responses</con:name><con:value>TRUE</con:value></con:property><con:property><con:name>traces_dir</con:name><con:value>../../../logs/traces/</con:value></con:property><con:property><con:name>etf.AssociatedRequirements</con:name><con:value>M-CR-V01##IR.1</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="false" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Test Mandatory INSPIRE Get View Service Metadata and Link View Service" searchProperties="true" id="6ddb8223-1680-4903-bab5-a7b158cd89eb" timeout="0" wsrmEnabled="false" wsrmVersion="1.0" wsrmAckTo="" amfAuthorisation="false" amfEndpoint="" amfLogin="" amfPassword=""><con:settings/><con:testStep type="httprequest" name="TG GetCapabilities" id="cea587dc-fb09-4708-88a5-4b0b689be3a7"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="TG GetCapabilities" id="7baf9a44-b519-4543-8b6c-a84be451490c" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#getCapabilitiesURL}</con:endpoint><con:request/><con:assertion type="Response SLA Assertion" name="Response SLA" id="9c8c4f50-bd5e-4dcc-b0b9-667155c9d169"><con:configuration><SLA>4000</SLA></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Timeout" id="bf399ec1-2d7f-4f23-bda6-45185cf4a7b8"><con:configuration><scriptText>// check response time
log.info( "time taken was :" + messageExchange.timeTaken );

</scriptText></con:configuration></con:assertion><con:assertion type="XQuery Match" name="M-CR-V01##R.18: INSPIRE MandatoryKeyword infoMapAccessService is present" id="56500e58-7c8d-415e-bff9-2983f2d66005"><con:configuration><path>declare namespace wms='http://www.opengis.net/wms';

&lt;result>AssertionFailures:{
let $keywords:= /wms:WMS_Capabilities/wms:Service/wms:KeywordList/wms:Keyword
let $keywordsstr:=string-join($keywords,"; ")
return
if (exists(index-of($keywords,"infoMapAccessService")) )
then " infoMapAccessService is advertized."
else concat(" infoMapAccessService is NOT advertized. This WMS advertizes the following Keywords: ",$keywordsstr)
}
&lt;/result></path><content>&lt;result>AssertionFailures: infoMapAccessService is advertized.&lt;/result></content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XQuery Match" name="M-CR-V01##R.31: INSPIRE GetMap Supports PNG or GIF" id="5662baa6-c332-4827-96af-ee74a12a30d9"><con:configuration><path>declare namespace wms='http://www.opengis.net/wms';

&lt;result>AssertionFailures: format image/png or image/gif is {
let $formats:=/wms:WMS_Capabilities/wms:Capability/wms:Request/wms:GetMap/wms:Format
return
if (exists(index-of($formats,"image/png")) or exists(index-of($formats,"image/gif")))
then "supported"
else "not supported"
}
&lt;/result></path><content>&lt;result>AssertionFailures: format image/png or image/gif is supported&lt;/result></content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XQuery Match" name="M-CR-V01##R.32.R.33: INSPIRE Resource Title: all Layers with a Name have a Title" id="836fd9d9-4507-4cad-af6c-48d131f161d6"><con:configuration><path>declare namespace wms='http://www.opengis.net/wms';

&lt;result>AssertionFailures: {
for $namedlayer in //wms:Layer[exists(wms:Name)]
where string-length($namedlayer/wms:Title)=0
return
concat ("Layer: ",$namedlayer/wms:Name," has no Title. ")
}
&lt;/result></path><content>&lt;result>AssertionFailures: &lt;/result></content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XQuery Match" name="M-CR-V01##R.32.R.34: INSPIRE Resource Abstract: all Layers with a Name have an Abstract" id="01a3bff3-9ea5-47a2-85c1-af7517fe0c3f"><con:configuration><path>declare namespace wms='http://www.opengis.net/wms';

&lt;result>AssertionFailures: {
for $namedlayer in //wms:Layer[exists(wms:Name)]
where string-length($namedlayer/wms:Abstract)=0
return
concat ("Layer: ",$namedlayer/wms:Name," has no Abstract. ")
}
&lt;/result></path><content>&lt;result>AssertionFailures: &lt;/result></content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XQuery Match" name="M-CR-V01##R.32.R.35: INSPIRE Resource Keyword: all Layers with a Name have at least one Keyword" id="c703710b-712a-4fcf-9110-8c05d83966e2"><con:configuration><path>declare namespace wms='http://www.opengis.net/wms';

&lt;result>AssertionFailures: {
for $namedlayer in //wms:Layer[exists(wms:Name)]
where count($namedlayer/wms:KeywordList/wms:Keyword)=0
return
concat ("Layer: ",$namedlayer/wms:Name," has no Keywords. ")
}
&lt;/result></path><content>&lt;result>AssertionFailures: &lt;/result></content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XQuery Match" name="M-CR-V01##R.32.R.36: INSPIRE Ex_GeographicBoundingBox: all Layers with a Name have a EX_GeographicBoundingBox" id="39ec21b8-f6fc-43da-9413-44c9f22ccf45"><con:configuration><path>declare namespace wms='http://www.opengis.net/wms';

&lt;result>AssertionFailures: {
for $namedlayer in //wms:Layer[exists(wms:Name)]
where count($namedlayer[exists(ancestor-or-self::wms:Layer/wms:EX_GeographicBoundingBox/wms:westBoundLongitude)])=0
return
concat ("Layer: ",$namedlayer/wms:Name," has no EX_GeographicBoundingBox. ")
}
&lt;/result></path><content>&lt;result>AssertionFailures: &lt;/result></content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XQuery Match" name="M-CR-V01##R.36: INSPIRE BoundingBox: all Layers with a Name have BoundingBoxes for all advertized CRSes" id="5a7a1287-8529-456f-9406-876f7ecff2ff"><con:configuration><path>declare namespace wms='http://www.opengis.net/wms';

&lt;result>AssertionFailures: {
for $namedlayer in //wms:Layer[exists(wms:Name)]
let $speccrsstr :=string-join($namedlayer/wms:CRS[../ancestor-or-self::wms:Layer/wms:BoundingBox/@CRS=.],"; ")
let $layercrsstr:=string-join($namedlayer/wms:CRS,"; ")
let $nrspec:=count($namedlayer/wms:CRS[../ancestor-or-self::wms:Layer/wms:BoundingBox/@CRS=.])
let $nrlayercrs:=count($namedlayer/wms:CRS[../ancestor-or-self::wms:Layer/wms:CRS])
where $nrspec != $nrlayercrs
return
concat ("For layer: ",$namedlayer/wms:Name," one ore more BoundingBoxes for the specified CRSes are missing. The specified CRSes for the layer are: ", $speccrsstr, ". The layer has boundingboxes for: ", $layercrsstr, ", nr spec: ", $nrspec, " nr layer crs: ",$nrlayercrs)
}
&lt;/result></path><content>&lt;result>AssertionFailures: &lt;/result></content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XQuery Match" name="M-CR-V01##R.37.R.38: INSPIRE Resource Identifier: all Layers with a Name have an Identifier and a declared Authority for that Identifier" id="d0276693-84ac-49f4-a003-028d60b61333"><con:configuration><path>declare namespace wms='http://www.opengis.net/wms';

&lt;result>AssertionFailures: {
for $namedlayer in //wms:Layer[exists(wms:Name)]
where string-length($namedlayer/wms:Identifier)=0  or string-length($namedlayer/wms:Identifier/@authority)=0 or count($namedlayer/wms:Identifier/@authority[.=//wms:AuthorityURL/@name])=0
return
concat ("For layer: ",$namedlayer/wms:Name," the Identifier, the Identifier authority attribute and/or AuthorityURL are missing. All have to be present.")
}
&lt;/result></path><content>&lt;result>AssertionFailures: &lt;/result></content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XQuery Match" name="M-CR-V01##R.41R.46: INSPIRE Styles: all Styles have a Name and Title" id="c4d60155-4d82-4ca3-bee0-c95586139000"><con:configuration><path>declare namespace wms='http://www.opengis.net/wms';

&lt;result>AssertionFailures: {
for $style in //wms:Style
where string-length($style/wms:Name)=0  or string-length($style/wms:Title)=0
return
concat ("For the Style: ",$style/wms:Name," of Layer ", $style/../wms:Name," the name and/or title are missing.")
}
&lt;/result></path><content>&lt;result>AssertionFailures: &lt;/result></content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XQuery Match" name="M-CR-V01##R.70: INSPIRE ResponseLanguage present" id="5c5f5132-28e8-4edd-b6e2-8782469b7b84"><con:configuration><path>declare namespace wms='http://www.opengis.net/wms';
declare namespace inspire_vs='http://inspire.ec.europa.eu/schemas/inspire_vs/1.0';
declare namespace inspire_common='http://inspire.ec.europa.eu/schemas/common/1.0';

&lt;result>AssertionFailures: {
let $lang:=/wms:WMS_Capabilities/wms:Capability/inspire_vs:ExtendedCapabilities/inspire_common:ResponseLanguage/inspire_common:Language
return
if (string-length($lang)=0)
then "The ResponseLanguage is NOT advertized. Check the INSPIRE Extended Capabilities."
else "ResponseLanguage is advertized."
}
&lt;/result></path><content>&lt;result>AssertionFailures: ResponseLanguage is advertized.&lt;/result></content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XQuery Match" name="M-CR-V01##R.71: INSPIRE DefaultLanguage present" id="06440c2e-307f-49f6-ba76-050d22ebaaa2"><con:configuration><path>declare namespace wms='http://www.opengis.net/wms';
declare namespace inspire_vs='http://inspire.ec.europa.eu/schemas/inspire_vs/1.0';
declare namespace inspire_common='http://inspire.ec.europa.eu/schemas/common/1.0';

&lt;result>AssertionFailures: {
let $lang:=/wms:WMS_Capabilities/wms:Capability/inspire_vs:ExtendedCapabilities/inspire_common:SupportedLanguages/inspire_common:DefaultLanguage/inspire_common:Language
return
if (string-length($lang)=0)
then "The DefaultLanguage is NOT advertized. Check the INSPIRE Extended Capabilities."
else "DefaultLanguage is advertized."
}
&lt;/result></path><content>&lt;result>AssertionFailures: DefaultLanguage is advertized.&lt;/result></content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XQuery Match" name="M-CR-V01##StylesPresent: All Layers with a Name have a Style" id="d86a758b-8477-49e4-bc03-ba472281658b"><con:configuration><path>declare namespace wms='http://www.opengis.net/wms';

&lt;result>AssertionFailures:
{
for $namedlayer in //wms:Layer[exists(wms:Name)]
where count($namedlayer/wms:Style)=0
return
concat ("Layer: ",$namedlayer/wms:Name," has no Style. ")
}
&lt;/result></path><content>&lt;result>AssertionFailures:&lt;/result></content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>ACCEPTVERSIONS</con:name><con:value>1.3.0</con:value></con:parameter><con:parameter><con:name>SERVICE</con:name><con:value>WMS</con:value></con:parameter><con:parameter><con:name>REQUEST</con:name><con:value>GetCapabilities</con:value></con:parameter><con:parameter><con:name>LANGUAGE</con:name><con:value>ENG</con:value></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="4e75212c-989c-46af-bab8-f90f6b6edb08"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="true" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>INSPIREServiceMetadataUrl</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>TG GetCapabilities</con:sourceStep><con:sourcePath>declare namespace wms='http://www.opengis.net/wms';
declare namespace xlink='http://www.w3.org/1999/xlink';
declare namespace inspire_vs='http://inspire.ec.europa.eu/schemas/inspire_vs/1.0';
declare namespace inspire_common='http://inspire.ec.europa.eu/schemas/common/1.0';

/wms:WMS_Capabilities/wms:Capability/inspire_vs:ExtendedCapabilities/inspire_common:MetadataUrl/inspire_common:URL</con:sourcePath><con:targetType>Endpoint</con:targetType><con:targetStep>Req 6 (Scenario 1): The inspire_common:MetadataURL refers to the INSPIRE service metadata available through an INSPIRE Discovery Service</con:targetStep><con:upgraded>true</con:upgraded></con:transfers><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="true" transferChildNodes="false" useXQuery="false" transferToAll="false" entitize="false"><con:name>datasetIdentifiersList</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>TG GetCapabilities</con:sourceStep><con:sourcePath>declare namespace wms='http://www.opengis.net/wms';
declare namespace xlink='http://www.w3.org/1999/xlink';
declare namespace inspire_vs='http://inspire.ec.europa.eu/schemas/inspire_vs/1.0';
declare namespace inspire_common='http://inspire.ec.europa.eu/schemas/common/1.0';
declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance';

string-join(//wms:Layer/wms:Identifier,',')</con:sourcePath><con:targetType>datasetIdentifiersList</con:targetType><con:targetStep>#Project#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="goto" name="Conditional Goto xsi:schemaLocation" id="d4e4fb98-2857-4914-9fd8-eaed1a68d8fd"><con:settings/><con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:condition><con:name>xsiSchemaLocationPresent</con:name><con:type>XPATH</con:type><con:expression>declare namespace wms='http://www.opengis.net/wms';
declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance';

exists(/wms:WMS_Capabilities/@xsi:schemaLocation)</con:expression><con:targetStep>TG GetCapabilities Schema Validation - xsi:schemaLocation</con:targetStep></con:condition></con:config></con:testStep><con:testStep type="httprequest" name="TG GetCapabilities Schema Validation - INSPIRE schema" id="b2eeb012-2ee4-478d-9727-f3c9c3aa97e8"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="TG GetCapabilities Schema Validation - INSPIRE schema" id="dc2b9323-374b-4ee7-8a20-92b7132d6318" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#getCapabilitiesURL}</con:endpoint><con:request/><con:assertion type="Simple Schema Validator" name="M-CR-V01##R.8.R.9: Capabilities implement the extended metadata. Validate to INSPIRE Schema http://inspire.ec.europa.eu/schemas/inspire_vs/1.0/inspire_vs.xsd" id="a356708c-4433-4344-9f4a-7d7ac92692bb"><con:configuration><pathToXSD>http://inspire.ec.europa.eu/schemas/inspire_vs/1.0/inspire_vs.xsd</pathToXSD></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>ACCEPTVERSIONS</con:name><con:value>1.3.0</con:value></con:parameter><con:parameter><con:name>SERVICE</con:name><con:value>WMS</con:value></con:parameter><con:parameter><con:name>REQUEST</con:name><con:value>GetCapabilities</con:value></con:parameter><con:parameter><con:name>LANGUAGE</con:name><con:value>ENG</con:value></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="goto" name="Conditional Goto Skip xsi:schemaLocation" id="85e39e09-a80b-4477-9c3d-8eb154cc07a2"><con:settings/><con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:condition><con:name>xsiSchemaLocationPresent</con:name><con:type>XPATH</con:type><con:expression>declare namespace wms='http://www.opengis.net/wms';
declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance';

empty(/wms:WMS_Capabilities/@xsi:schemaLocation)</con:expression><con:targetStep>TG GetCapabilities - Metadata</con:targetStep></con:condition></con:config></con:testStep><con:testStep type="httprequest" name="TG GetCapabilities Schema Validation - xsi:schemaLocation" id="9253e6e6-2d3f-41b9-9a94-0de613448df2"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="TG GetCapabilities Schema Validation - xsi:schemaLocation" id="a0dc3258-4e69-4b79-a744-73ea55d7a3d9" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#getCapabilitiesURL}</con:endpoint><con:request/><con:assertion type="Simple Schema Validator" name="M-CR-V01##R.8.R.9b: Capabilities implement the extended metadata. Validate to declared XML Schema (xsi:schemaLocation)" id="e20fb081-745b-431b-a3ef-3dffc104c774"><con:configuration><pathToXSD>xsi:schemaLocation</pathToXSD></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>ACCEPTVERSIONS</con:name><con:value>1.3.0</con:value></con:parameter><con:parameter><con:name>SERVICE</con:name><con:value>WMS</con:value></con:parameter><con:parameter><con:name>REQUEST</con:name><con:value>GetCapabilities</con:value></con:parameter><con:parameter><con:name>LANGUAGE</con:name><con:value>ENG</con:value></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="TG GetCapabilities - Metadata" id="5dd027f5-a953-4849-8e81-e28df8e3e2e1"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="TG GetCapabilities - Metadata" id="10877d0a-8e59-4545-b09f-c23f05dfe3d0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#getCapabilitiesURL}</con:endpoint><con:request/><con:assertion type="Response SLA Assertion" name="Document Received" id="27359958-5a28-4bff-b21c-dbd2da2e92ab"><con:configuration><SLA>30000</SLA></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>ACCEPTVERSIONS</con:name><con:value>1.3.0</con:value></con:parameter><con:parameter><con:name>SERVICE</con:name><con:value>WMS</con:value></con:parameter><con:parameter><con:name>REQUEST</con:name><con:value>GetCapabilities</con:value></con:parameter><con:parameter><con:name>LANGUAGE</con:name><con:value>ENG</con:value></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="goto" name="Conditional Goto Scenario 1 ExternalServiceMetadata" id="11952750-d5a0-455d-896c-ecc31d26fd30"><con:settings/><con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:condition><con:name>ExternalServiceMetadata</con:name><con:type>XPATH</con:type><con:expression>declare namespace wms='http://www.opengis.net/wms';
declare namespace xlink='http://www.w3.org/1999/xlink';
declare namespace inspire_vs='http://inspire.ec.europa.eu/schemas/inspire_vs/1.0';
declare namespace inspire_common='http://inspire.ec.europa.eu/schemas/common/1.0';

exists(/wms:WMS_Capabilities/wms:Capability/inspire_vs:ExtendedCapabilities/inspire_common:MetadataUrl/inspire_common:URL)</con:expression><con:targetStep>CleanupAuthorization</con:targetStep></con:condition></con:config></con:testStep><con:testStep type="httprequest" name="Req 7 (Scenario 2) CapabilitiesServiceMetadata" id="2e6780af-c786-45d8-91a4-f7b57713e2c8"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Req 7 (Scenario 2) CapabilitiesServiceMetadata" id="8c02c0e2-9f65-4fe6-9c5d-260b207e7bee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#getCapabilitiesURL}</con:endpoint><con:request/><con:assertion type="XQuery Match" name="M-CR-V01##R.10: WMS Title present" id="fa456944-c48a-45f1-96e8-2ec3f4867554"><con:configuration><path>declare namespace wms='http://www.opengis.net/wms';
declare namespace inspire_vs='http://inspire.ec.europa.eu/schemas/inspire_vs/1.0';
declare namespace inspire_common='http://inspire.ec.europa.eu/schemas/common/1.0';

&lt;result>AssertionFailures: {
let $title:=/wms:WMS_Capabilities/wms:Service/wms:Title
return
if (string-length($title)=0)
then "The WMS Title of the Service is NOT advertized."
else "The WMS Title of the Service is advertized."
}
&lt;/result></path><content>&lt;result>AssertionFailures: The WMS Title of the Service is advertized.&lt;/result></content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XQuery Match" name="M-CR-V01##R.10b: WMS Abstract present" id="7e01c425-34a7-497b-9e22-8b5197efc952"><con:configuration><path>declare namespace wms='http://www.opengis.net/wms';
declare namespace inspire_vs='http://inspire.ec.europa.eu/schemas/inspire_vs/1.0';
declare namespace inspire_common='http://inspire.ec.europa.eu/schemas/common/1.0';

&lt;result>AssertionFailures: {
let $abstract:=/wms:WMS_Capabilities/wms:Service/wms:Abstract
return
if (string-length($abstract)=0)
then "The WMS Abstract of the Service is NOT advertized."
else "The WMS Abstract of the Service is advertized."
}
&lt;/result></path><content>&lt;result>AssertionFailures: The WMS Abstract of the Service is advertized.&lt;/result></content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XQuery Match" name="M-CR-V01##R.11: INSPIRE Resource Type" id="22b79232-3b60-4c71-870a-e8be4912f3dc"><con:configuration><path>declare namespace wms='http://www.opengis.net/wms';
declare namespace inspire_vs='http://inspire.ec.europa.eu/schemas/inspire_vs/1.0';
declare namespace inspire_common='http://inspire.ec.europa.eu/schemas/common/1.0';

&lt;result>AssertionFailures: {
let $rtype:=/wms:WMS_Capabilities/wms:Capability/inspire_vs:ExtendedCapabilities/inspire_common:ResourceType
return
if (string-length($rtype)=0)
then "The INSPIRE ResourceType is NOT advertized. Check the INSPIRE Extended Capabilities."
else "The INSPIRE ResourceType is advertized."
}
&lt;/result></path><content>&lt;result>AssertionFailures: The INSPIRE ResourceType is advertized.&lt;/result></content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XQuery Match" name="M-CR-V01##R.16.R.18: INSPIRE MandatoryKeyword infoMapAccessService" id="39962080-15c0-4c6d-998b-cc4429621c31"><con:configuration><path>declare namespace wms='http://www.opengis.net/wms';
declare namespace xlink='http://www.w3.org/1999/xlink';
declare namespace inspire_vs='http://inspire.ec.europa.eu/schemas/inspire_vs/1.0';
declare namespace inspire_common='http://inspire.ec.europa.eu/schemas/common/1.0';

&lt;result>AssertionFailures: {
let $keywords:= /wms:WMS_Capabilities/wms:Service/wms:KeywordList/wms:Keyword
let $keywordsstr:=string-join($keywords,"; ")
let $extendedKeyword:=/wms:WMS_Capabilities/wms:Capability/inspire_vs:ExtendedCapabilities/inspire_common:MandatoryKeyword/inspire_common:KeywordValue
return
if (exists(index-of($keywords,"infoMapAccessService")) and string-length($extendedKeyword)>0)
then "infoMapAccessService is advertized in the WMS keywords. An INSPIRE Extended Capabilities Keyword is set to infoMapAccessService too."
else if (exists(index-of($keywords,"infoMapAccessService")))
then "infoMapAccessService is advertized in the WMS keywords. But an INSPIRE Extended Capabilities keyword with the value 'infoMapAccessService' is NOT present. Check the INSPIRE Extended Capabilities for the Keyword."
else if (string-length($extendedKeyword)>0)
then concat(" infoMapAccessService is NOT advertized in the WMS keywords. This WMS advertizes the following Keywords: ",$keywordsstr, ". An INSPIRE Extended Capabilities Keyword is correctly set to infoMapAccessService.")
else " infoMapAccessService is NOT advertized in the WMS keywords. And an INSPIRE Extended Capabilities keyword with the value 'infoMapAccessService' is NOT present. Check the INSPIRE Extended Capabilities for the Keyword."
}
&lt;/result></path><content>&lt;result>AssertionFailures: infoMapAccessService is advertized in the WMS keywords. An INSPIRE Extended Capabilities Keyword is set to infoMapAccessService too.&lt;/result></content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XQuery Match" name="M-CR-V01##R.24: INSPIRE Conditions for Access and Use (wms:Fees)" id="fe071960-80ca-40e6-8710-ee1f48ae169b"><con:configuration><path>declare namespace wms='http://www.opengis.net/wms';
declare namespace xlink='http://www.w3.org/1999/xlink';
declare namespace inspire_vs='http://inspire.ec.europa.eu/schemas/inspire_vs/1.0';
declare namespace inspire_common='http://inspire.ec.europa.eu/schemas/common/1.0';

&lt;result>AssertionFailures: {
let $value:=/wms:WMS_Capabilities/wms:Service/wms:Fees
return
if (string-length($value)>0)
then "INSPIRE conditions for Access and Use are present (wms:Fees)."
else "INSPIRE conditions for Access and Use are NOT present. Check the wms:Fees element."
}
&lt;/result></path><content>&lt;result>AssertionFailures: INSPIRE conditions for Access and Use are present (wms:Fees).&lt;/result></content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XQuery Match" name="M-CR-V01##R.25.R.26: INSPIRE Responsible Organization present (wms:ContactOrganization and wms:ContactPosition)" id="d77fe266-d2ef-48ae-acfc-8f543183af65"><con:configuration><path>declare namespace sld='http://www.opengis.net/sld';
declare namespace wms='http://www.opengis.net/wms';
declare namespace ms='http://mapserver.gis.umn.edu/mapserver';
declare namespace xlink='http://www.w3.org/1999/xlink';
declare namespace inspire_vs='http://inspire.europa.eu/networkservice/view/1.0';

&lt;result>AssertionFailures: {
let $contactOrg:=wms:WMS_Capabilities/wms:Service/wms:ContactInformation/wms:ContactPersonPrimary/wms:ContactOrganization
let $contactPos:=wms:WMS_Capabilities/wms:Service/wms:ContactInformation/wms:ContactPosition
return
if (string-length($contactOrg)=0 or string-length($contactPos)=0 )
then "INSPIRE Responsible Organization is not completely present. Check if wms:ContactOrganization and wms:ContactPosition are both advertized."
else "INSPIRE Responsible Organization is present (wms:ContactOrganization and wms:ContactPosition)."
}
&lt;/result></path><content>&lt;result>AssertionFailures: INSPIRE Responsible Organization is present (wms:ContactOrganization and wms:ContactPosition).&lt;/result></content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XQuery Match" name="M-CR-V01##R.33: INSPIRE Theme is mapped to a Keyword" id="a48f3dfd-8c8a-41a3-b77e-2ee4e2e2a405"><con:configuration><path>declare namespace wms='http://www.opengis.net/wms';
declare namespace xlink='http://www.w3.org/1999/xlink';
declare namespace inspire_vs='http://inspire.ec.europa.eu/schemas/inspire_vs/1.0';
declare namespace inspire_common='http://inspire.ec.europa.eu/schemas/common/1.0';


&lt;result>AssertionFailures: {
let $keywordVals:=/wms:WMS_Capabilities/wms:Capability/inspire_vs:ExtendedCapabilities/inspire_common:Keyword/inspire_common:KeywordValue
return
if (exists($keywordVals))
then "there are INSPIRE keywords available. This indicates that an INSPIRE Theme might be mapped."
else "there are no INSPIRE keywords available. Make sure that in the Extended Capabilities a KeywordValue is mapped to an INSPIRE Theme."
}
&lt;/result></path><content>&lt;result>AssertionFailures: there are INSPIRE keywords available. This indicates that an INSPIRE Theme might be mapped.&lt;/result></content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>ACCEPTVERSIONS</con:name><con:value>1.3.0</con:value></con:parameter><con:parameter><con:name>SERVICE</con:name><con:value>WMS</con:value></con:parameter><con:parameter><con:name>REQUEST</con:name><con:value>GetCapabilities</con:value></con:parameter><con:parameter><con:name>LANGUAGE</con:name><con:value>ENG</con:value></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="goto" name="Conditional Goto Skip Scenario 1" id="b73df105-2432-4e78-aa90-4b1421f2d511"><con:settings/><con:config xsi:type="con:GotoStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:condition><con:name>SkipScenario1</con:name><con:type>XPATH</con:type><con:expression>declare namespace wms='http://www.opengis.net/wms';
declare namespace xlink='http://www.w3.org/1999/xlink';
declare namespace inspire_vs='http://inspire.ec.europa.eu/schemas/inspire_vs/1.0';
declare namespace inspire_common='http://inspire.ec.europa.eu/schemas/common/1.0';

empty(/wms:WMS_Capabilities/wms:Capability/inspire_vs:ExtendedCapabilities/inspire_common:MetadataUrl/inspire_common:URL)</con:expression><con:targetStep>Property Transfer (Finish Goto)</con:targetStep></con:condition></con:config></con:testStep><con:testStep type="groovy" name="CleanupAuthorization" id="7342c334-fab9-4401-a7d5-87fcf081c001"><con:settings/><con:config><script>//import com.eviware.soapui.support.types.StringToStringsMap;
//
//def reqName = "Req 6 (Scenario 1): The inspire_common:MetadataURL refers to the INSPIRE service metadata available through an INSPIRE Discovery Service"
//// remove any Authorization header if provided for the service (because this request is for metadata)
//def newheaders = new StringToStringsMap()
//def header = testRunner.testCase.testSteps[reqName].httpRequest.getRequestHeaders()
// header.each
// {
//  if (key!="Authorization") {
//       newheaders.put(key,val)
//  }
// }
//testRunner.testCase.testSteps[reqName].getHttpRequest().setRequestHeaders(newheaders);</script></con:config></con:testStep><con:testStep type="httprequest" name="Req 6 (Scenario 1): The inspire_common:MetadataURL refers to the INSPIRE service metadata available through an INSPIRE Discovery Service" id="9d0d7924-7944-46af-9006-e76990f38ad6"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Req 6 (Scenario 1): The inspire_common:MetadataURL refers to the INSPIRE service metadata available through an INSPIRE Discovery Service" id="abf3ec09-6687-49ec-9dba-05538626c95a" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint xsi:nil="true"/><con:request/><con:assertion type="XQuery Match" name="M-CR-V01##R.6: The Service Metadata has ISO Metadata Root element (gmd:MD_Metadata exists)" id="96950c58-daad-4b67-b242-7a3c3de080c6"><con:configuration><path>declare namespace gmd='http://www.isotc211.org/2005/gmd';
declare namespace csw='http://www.opengis.net/cat/csw/2.0.2';

&lt;result>AssertionFailures: {
let $value:=//gmd:MD_Metadata
return
if (exists($value))
then "the service metadata has an ISO Metadata root element (gmd:Metadata exists)."
else "the referred service Metadata document does not seem to be ISO Metadata. It does not have an XML element gmd:Metadata. Check the URL in the MetadataURL of the INSPIRE Extended Capabilities."
}
&lt;/result></path><content>&lt;result>AssertionFailures: the service metadata has an ISO Metadata root element (gmd:Metadata exists).&lt;/result></content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer Metadata Identifiers" id="82368539-5efe-4b58-91fc-96d3bb0b4354"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="false" ignoreEmpty="true" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>datasetIdentifiersOperatesOn</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>Req 6 (Scenario 1): The inspire_common:MetadataURL refers to the INSPIRE service metadata available through an INSPIRE Discovery Service</con:sourceStep><con:sourcePath>declare namespace gmd='http://www.isotc211.org/2005/gmd';
declare namespace srv='http://www.isotc211.org/2005/srv';
declare namespace gco='http://www.isotc211.org/2005/gco';
string-join(//srv:operatesOn/@uuidref,',')</con:sourcePath><con:targetType>datasetIdentifiersList</con:targetType><con:targetStep>#Project#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer (Finish Goto)" id="7dc5a90e-a7eb-4e4b-abad-e15fc77e3420"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:testStep><con:properties><con:property><con:name>MAIN_TESTSTEP</con:name><con:value>TG GetCapabilities</con:value></con:property><con:property><con:name>save_responses</con:name><con:value>TRUE</con:value></con:property><con:property><con:name>traces_dir</con:name><con:value>../../../logs/traces/</con:value></con:property><con:property><con:name>etf.AssociatedRequirements</con:name><con:value>M-CR-V01###M-CR-V01##R.18###M-CR-V01##R.31###M-CR-V01##R.32.R.33###M-CR-V01##R.32.R.34###M-CR-V01##R.32.R.35###M-CR-V01##R.32.R.36###M-CR-V01##R.36###M-CR-V01##R.37.R.38###M-CR-V01##R.41R.46###M-CR-V01##R.70###M-CR-V01##R.71###M-CR-V01##StylesPresent###M-CR-V01##R.8.R.9###M-CR-V01##R.8.R.9b###M-CR-V01##R.10###M-CR-V01##R.10b###M-CR-V01##R.11###M-CR-V01##R.16.R.18###M-CR-V01##R.24###M-CR-V01##R.25.R.26###M-CR-V01##R.33</con:value></con:property></con:properties></con:testCase><con:properties><con:property><con:name>etf.AssociatedRequirements</con:name><con:value>M-CR-V01</con:value></con:property></con:properties></con:testSuite><con:testSuite name="O-CR-V02 - Get View Service Metadata Optional" id="bebe1cde-5a96-499e-b67c-fbd4519574f1"><con:description>For various combinations of valid mandatory and optional request
parameters validate that the view service returns a valid XML file,
checked against the WMS 1.3.0 GetCapabilties Response schema.</con:description><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="Test Optional Get View Service Metadata Parameters" searchProperties="true" id="030e2606-2bd4-4922-8c38-1f1a4a6bf6f5"><con:settings/><con:testStep type="httprequest" name="GetCapabilities" id="661ec955-c51b-4ad2-ac38-833e10c1eab1"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="GetCapabilities" id="bd298a41-f5f7-4333-b840-64431a409f8d" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:endpoint>${#Project#getCapabilitiesURL}</con:endpoint><con:request/><con:assertion type="Response SLA Assertion" name="Response SLA" id="4a6204f1-4b4c-4aae-be4e-5039e68c6dfb"><con:configuration><SLA>5000</SLA></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Timeout" id="31094fd3-2a90-442a-b5b0-ac88dfdc20e8"><con:configuration><scriptText>// check response time
log.info( "time taken was :" + messageExchange.timeTaken );

</scriptText></con:configuration></con:assertion><con:assertion type="XQuery Match" name="O-CR-V02##R.39: INSPIRE there is a harmonized Layer Name available" id="91be5120-1277-4b75-8fba-2edf60501d5f"><con:configuration><path>declare namespace wms='http://www.opengis.net/wms';
declare namespace xlink='http://www.w3.org/1999/xlink';
declare namespace inspire_vs='http://inspire.ec.europa.eu/schemas/inspire_vs/1.0';
declare namespace inspire_common='http://inspire.ec.europa.eu/schemas/common/1.0';
declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance';

&lt;result>AssertionFailures: {
let $allLayerNames:=string-join(//wms:Layer[wms:Name]/wms:Name, "; ")

let $harmonizedLayers:=string-join(//wms:Layer[wms:Name='AD.Address' or wms:Name='HY.PhysicalWaters.Waterbodies' or wms:Name='HY.PhysicalWaters.LandWaterBoundary' or wms:Name='HY.PhysicalWaters.Catchments' or wms:Name='HY.Network' or wms:Name='HY.PhysicalWaters.HydroPointOfInterest' or wms:Name='HY.PhysicalWaters.ManMadeObject' or wms:Name='HY.AquiferNode' or wms:Name='HY.HydroObject' or wms:Name='HY.Reporting.WFDRiver' or wms:Name='HY.Reporting.WFDLake' or wms:Name='HY.Reporting.WFDTransitionalWater' or wms:Name='HY.Reporting.WFDCoastalWater' or wms:Name='HY.OceanRegion' or wms:Name='TN.CommonTransportElements.TransportNode' or wms:Name='TN.CommonTransportElements.TransportLink' or wms:Name='TN.CommonTransportElements.TransportArea' or wms:Name='TN.RoadTransportNetwork.RoadLink' or wms:Name='TN.RoadTransportNetwork.VehicleTrafficArea' or wms:Name='TN.RoadTransportNetwork.RoadServiceArea' or wms:Name='TN.RoadTransportNetwork.RoadArea' or wms:Name='TN.RailTransportNetwork.RailwayLink' or wms:Name='TN.RailTransportNetwork.RailwayStationArea' or wms:Name='TN.RailTransportNetwork.RailwayYardArea' or wms:Name='TN.RailTransportNetwork.RailwayArea' or wms:Name='TN.WaterTransportNetwork.WaterwayLink' or wms:Name='TN.WaterTransportNetwork.FairwayArea' or wms:Name='TN.WaterTransportNetwork.PortArea' or wms:Name='TN.AirTransportNetwork.AirLink' or wms:Name='TN.AirTransportNetwork.AerodromeArea' or wms:Name='TN.AirTransportNetwork.RunwayArea' or wms:Name='TN.AirTransportNetwork.AirSpaceArea' or wms:Name='TN.AirTransportNetwork.ApronArea' or wms:Name='TN.AirTransportNetwork.TaxiwayArea' or wms:Name='TN.CableTransportNetwork.CablewayLink' or wms:Name='PS.ProtectedSite' or wms:Name='PS.ProtectedSitesNatureConservation' or wms:Name='PS.ProtectedSitesArcheaological' or wms:Name='PS.ProtectedSitesCultural' or wms:Name='PS.ProtectedSitesEcological' or wms:Name='PS.ProtectedSitesLandscape' or wms:Name='PS.ProtectedSitesEnvironment' or wms:Name='PS.ProtectedSitesGeological' or wms:Name='GN.GeographicalNames' or wms:Name='CP.CadastralParcel' or wms:Name='CP.CadastralZoning' or wms:Name='CP.CadastralBoundary' or wms:Name='AU.AdministrativeUnit' or wms:Name='AU.AdministrativeBoundary' or wms:Name='AU.Condominium' or wms:Name='AU.NUTSRegion'
 or wms:Name='AF.AgriculturalHolding'
 or wms:Name='AF.AquacultureHolding'
 or wms:Name='AF.Sites'
 or wms:Name='AF.Plots'
 or wms:Name='AF.Agribuilding'
 or wms:Name='AM.AirQualityManagementZone'
 or wms:Name='AM.AnimalHealthRestrictionZone'
 or wms:Name='AM.AreaForDisposalOfWaste'
 or wms:Name='AM.BathingWaters'
 or wms:Name='AM.CoastalZoneManagementArea'
 or wms:Name='AM.DesignatedWaters'
 or wms:Name='AM.DrinkingWaterProtectionArea'
 or wms:Name='AM.FloodUnitOfManagement'
 or wms:Name='AM.ForestManagementArea'
 or wms:Name='AM.MarineRegion'
 or wms:Name='AM.NitrateVulnerableZone'
 or wms:Name='AM.NoiseRestrictionZone'
 or wms:Name='AM.PlantHealthProtectionZone'
 or wms:Name='AM.ProspectingAndMiningPermitArea'
 or wms:Name='AM.RegulatedFairwayAtSeaOrLargeInlandWater'
 or wms:Name='AM.RestrictedZonesAroundContaminatedSites'
 or wms:Name='AM.RiverBasinDistrict'
 or wms:Name='AM.SensitiveArea'
 or wms:Name='AM.WaterBodyForWFD'
 or starts-with(wms:Name, 'AC-MF')
 or wms:Name='BR.Bio-geographicalRegion'
 or wms:Name='BU.Building'
 or wms:Name='BU.BuildingPart'
 or wms:Name='EF.EnvironmentalMonitoringFacilities'
 or wms:Name='EF.EnvironmentalMonitoringNetworks'
 or wms:Name='EF.EnvironmentalMonitoringProgrammes'
 or wms:Name='EL.BreakLine'
 or wms:Name='EL.ContourLine'
 or wms:Name='EL.IsolatedArea'
 or wms:Name='EL.SpotElevation'
 or wms:Name='EL.VoidArea'
 or wms:Name='EL.GridCoverage'
 or wms:Name='EL.TIN'
 or wms:Name='ER.FossilFuelResource'
 or wms:Name='ER.RenewableAndWasteResource'
 or wms:Name='ER.RenewableAndWastePotentialCoverage'
 or wms:Name='ER.EnergyStatisticalUnit'
 or wms:Name='LC.LandCoverPoints'
 or wms:Name='LC.LandCoverSurfaces'
 or wms:Name='LC.LandCoverRaster'
 or wms:Name='LU.ExistingLandUse'
 or wms:Name='LU.SpatialPlan'
 or wms:Name='LU.ZoningElement'
 or wms:Name='LU.SupplementaryRegulation'
 or wms:Name='MR.Mine'
 or wms:Name='MR.MineralOccurrence'
 or wms:Name='NZ.RiskZone'
 or wms:Name='NZ.RiskZoneCoverage'
 or starts-with(wms:Name, 'NZ.')
 or wms:Name='NZ.ExposedElement'
 or wms:Name='NZ.ExposedElementCoverage'
 or wms:Name='OF.PointObservation'
 or wms:Name='OF.PointTimeSeriesObservation'
 or wms:Name='OF.MultiPointObservation'
 or wms:Name='OF.GridObservation'
 or wms:Name='OF.GridSeriesObservation'
 or wms:Name='OI.OrthoimageCoverage'
 or wms:Name='OI.MosaicElement'
 or starts-with(wms:Name, 'PD.')
 or wms:Name='PF.ProductionSite'
 or starts-with(wms:Name, 'PF.')
 or wms:Name='PF.ProductionPlot'
 or wms:Name='PF.ProductionInstallation'
 or wms:Name='PF.ProductionInstallationPart'
 or wms:Name='PF.ProductionBuilding'
 or starts-with(wms:Name, 'SD.')
 or wms:Name='SO.SoilBody'
 or wms:Name='SO.ObservedSoilProfile'
 or wms:Name='SO.SoilSite'
 or starts-with(wms:Name, 'SO.')
 or wms:Name='SR.SeaArea'
 or wms:Name='SR.Sea'
 or wms:Name='SR.MarineCirculationZone'
 or wms:Name='SR.InterTidalArea'
 or wms:Name='SR.MarineContour'
 or wms:Name='SR.Shoreline'
 or wms:Name='SR.Coastline'
 or wms:Name='SR.SeaSurfaceArea'
 or wms:Name='SR.SeaBedArea'
 or wms:Name='SU.VectorStatisticalUnit'
 or wms:Name='SU.StatisticalGridCell'
 or wms:Name='US.UtilityNetwork'
 or wms:Name='US.ElectricityNetwork'
 or wms:Name='US.OilGasChemicalsNetwork'
 or wms:Name='US.SewerNetwork'
 or wms:Name='US.ThermalNetwork'
 or wms:Name='US.WaterNetwork'
 or starts-with(wms:Name, 'US.')
 or wms:Name='US.EnvironmentalManagementFacility']/wms:Name,", ")

 return
if (string-length($harmonizedLayers)>0)
then "there are harmonized layer names advertized in the Capabilities."
else concat("None of these layer names is an harmonized layer name: ", $allLayerNames)
}
&lt;/result></path><content>&lt;result>AssertionFailures: there are harmonized layer names advertized in the Capabilities.&lt;/result></content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XQuery Match" name="O-CR-V02##R.40: INSPIRE Coordinate Reference System 4258 in Layer or group Layer" id="4dbcb873-75f4-42bc-9cf9-72157dcf2bed"><con:configuration><path>declare namespace wms='http://www.opengis.net/wms';

&lt;result>AssertionFailures: {
for $namedlayer in //wms:Layer[exists(wms:Name) and  empty(ancestor-or-self::wms:Layer/wms:CRS[contains( ., ':4258') or contains( ., ':4326') or contains( ., 'CRS:84')]) ]
return
concat ("Layer: ",$namedlayer/wms:Name," or the Group Layer it belongs to, seems to miss one of the CRSes: EPSG:4258, EPSG:4326, WGS84 (in different encoding formats like EPSG:4258 or urn:ogc:def:crs:EPSG::4258)")
}
&lt;/result></path><content>&lt;result>AssertionFailures: &lt;/result></content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>ACCEPTVERSIONS</con:name><con:value>1.3.0</con:value></con:parameter><con:parameter><con:name>SERVICE</con:name><con:value>WMS</con:value></con:parameter><con:parameter><con:name>REQUEST</con:name><con:value>GetCapabilities</con:value></con:parameter><con:parameter><con:name>LANGUAGE</con:name><con:value>ENG</con:value></con:parameter></con:parameters></con:config></con:testStep><con:setupScript/><con:properties><con:property><con:name>MAIN_TESTSTEP</con:name><con:value>GetCapabilities</con:value></con:property><con:property><con:name>save_responses</con:name><con:value>TRUE</con:value></con:property><con:property><con:name>traces_dir</con:name><con:value>../../../logs/traces/</con:value></con:property></con:properties></con:testCase><con:properties><con:property><con:name>etf.AssociatedRequirements</con:name><con:value>M-CR-V01##R.39###M-CR-V01##R.40</con:value></con:property></con:properties></con:testSuite><con:testSuite name="M-CR-V04 - GetMap Mandatory" id="f8085392-a3eb-4372-baf9-75a6f22e7b01"><con:description>GetMap Mandatory and Optional Parameters</con:description><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetMap Mandatory Parameters" searchProperties="true" id="031afbfe-5a63-47f5-a850-58ac2f1385d5"><con:settings/><con:testStep type="httprequest" name="GetMap default layer" id="609af8f1-d563-4f92-bcee-d0e0db884f2d"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="GetMap default layer" id="70c78321-4c18-4300-9cb0-6f80e374bbf5" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#getMapUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="M-CR-V04##R.50-57: Content-Type == image/png" id="b472dc75-05b0-4367-9b3c-57b060e7964a"><con:configuration><scriptText>headers = messageExchange.getResponseHeaders()
mimetype = headers["Content-Type"][0].split(";")[0]
log.info(mimetype)
assert mimetype == "image/png"
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="response size > 100" id="42b57ec8-537a-43e6-9887-f19c8b649950"><con:configuration><scriptText>/** Reponse size should be more that 1k. This should exclude most
INIMAGE exceptions */

m = messageExchange
size = messageExchange.getResponseContent().size()
log.info("size of response was: " + size)
assert size > 100
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>VERSION</con:name><con:value>1.3.0</con:value></con:parameter><con:parameter><con:name>SERVICE</con:name><con:value>WMS</con:value></con:parameter><con:parameter><con:name>REQUEST</con:name><con:value>GetMap</con:value></con:parameter><con:parameter><con:name>BGCOLOR</con:name><con:value/></con:parameter><con:parameter><con:name>CRS</con:name><con:value>${#Project#firstlayercrs}</con:value></con:parameter><con:parameter><con:name>BBOX</con:name><con:value>${#Project#bbox}</con:value></con:parameter><con:parameter><con:name>HEIGHT</con:name><con:value>600</con:value></con:parameter><con:parameter><con:name>STYLES</con:name><con:value>${#Project#firstlayerstyle}</con:value></con:parameter><con:parameter><con:name>WIDTH</con:name><con:value>800</con:value></con:parameter><con:parameter><con:name>TRANSPARENT</con:name><con:value>true</con:value></con:parameter><con:parameter><con:name>EXCEPTIONS</con:name><con:value>XML</con:value></con:parameter><con:parameter><con:name>FORMAT</con:name><con:value>image/png</con:value></con:parameter><con:parameter><con:name>LAYERS</con:name><con:value>${#Project#firstlayercapabilities}</con:value></con:parameter><con:parameter><con:name>SRS</con:name><con:value>${#Project#firstlayercrs}</con:value></con:parameter></con:parameters></con:config></con:testStep><con:properties><con:property><con:name>MAIN_TESTSTEP</con:name><con:value>GetMap default layer</con:value></con:property><con:property><con:name>save_responses</con:name><con:value>TRUE</con:value></con:property><con:property><con:name>traces_dir</con:name><con:value>../../../logs/traces/</con:value></con:property></con:properties></con:testCase><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetMap INSPIRE Parameters" searchProperties="true" id="ee865283-05c2-437f-b7ae-01728bfe9394"><con:settings/><con:testStep type="httprequest" name="INSPIRE GetMap default layer" id="27741ba5-eb13-485c-ba0b-fecc790f6888"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="INSPIRE GetMap default layer" id="47b413cc-9dc8-4221-9ede-9aa7dbbd4004" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#getMapUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="M-CR-V04##R.58: valid image TRANSPARENT" id="2aefd2cf-8f04-4b5a-8f14-f9fc68c7c89c"><con:configuration><scriptText>headers = messageExchange.getResponseHeaders()
mimetype = headers["Content-Type"][0].split(";")[0]
log.info(mimetype)
assert mimetype == "image/png"
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="response size > 100" id="dde533b3-054f-4e3b-8be5-482cdf8dc082"><con:configuration><scriptText>/** Reponse size should be more that 1k. This should exclude most
INIMAGE exceptions */

m = messageExchange
size = messageExchange.getResponseContent().size()
log.info("size of response was: " + size)
assert size > 100
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>VERSION</con:name><con:value>1.3.0</con:value></con:parameter><con:parameter><con:name>SERVICE</con:name><con:value>WMS</con:value></con:parameter><con:parameter><con:name>REQUEST</con:name><con:value>GetMap</con:value></con:parameter><con:parameter><con:name>BGCOLOR</con:name><con:value>0x0000FF</con:value></con:parameter><con:parameter><con:name>CRS</con:name><con:value>${#Project#firstlayercrs}</con:value></con:parameter><con:parameter><con:name>BBOX</con:name><con:value>${#Project#bbox}</con:value></con:parameter><con:parameter><con:name>HEIGHT</con:name><con:value>600</con:value></con:parameter><con:parameter><con:name>STYLES</con:name><con:value>${#Project#firstlayerstyle}</con:value></con:parameter><con:parameter><con:name>WIDTH</con:name><con:value>800</con:value></con:parameter><con:parameter><con:name>TRANSPARENT</con:name><con:value>true</con:value></con:parameter><con:parameter><con:name>EXCEPTIONS</con:name><con:value>XML</con:value></con:parameter><con:parameter><con:name>FORMAT</con:name><con:value>image/png</con:value></con:parameter><con:parameter><con:name>LAYERS</con:name><con:value>${#Project#firstlayercapabilities}</con:value></con:parameter><con:parameter><con:name>SRS</con:name><con:value>${#Project#firstlayercrs}</con:value></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="Req 59: test EXCEPTIONS=XML" id="6fe126be-539b-4f4e-8162-a3d480c0493c"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="Req 59: test EXCEPTIONS=XML" id="45a70951-4027-4520-9b3e-fd0af81f0dd9" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#getMapUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="M-CR-V04##R.59: EXCEPTIONS format is XML" id="15155a66-b5cc-42e4-b045-24666ac2e28d"><con:configuration><scriptText>headers = messageExchange.getResponseHeaders()
mimetype = headers["Content-Type"][0].split(";")[0]
log.info(mimetype)
// Thijs Brentjens, Geonovum: only use the main mimetype, strip off subtypes after ;
assert mimetype == "text/xml" : "The WMS does not return an exception in format text/xml. \n\n Request: \n" + new String( messageExchange.getRawRequestData() ) + "\n\n"</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>VERSION</con:name><con:value>1.3.0</con:value></con:parameter><con:parameter><con:name>SERVICE</con:name><con:value>WMS</con:value></con:parameter><con:parameter><con:name>REQUEST</con:name><con:value>BREAKME</con:value></con:parameter><con:parameter><con:name>BGCOLOR</con:name><con:value>0x0000FF</con:value></con:parameter><con:parameter><con:name>CRS</con:name><con:value>${#Project#firstlayercrs}</con:value></con:parameter><con:parameter><con:name>BBOX</con:name><con:value>${#Project#bbox}</con:value></con:parameter><con:parameter><con:name>HEIGHT</con:name><con:value>600</con:value></con:parameter><con:parameter><con:name>STYLES</con:name><con:value>${#Project#firstlayerstyle}</con:value></con:parameter><con:parameter><con:name>WIDTH</con:name><con:value>800</con:value></con:parameter><con:parameter><con:name>TRANSPARENT</con:name><con:value>true</con:value></con:parameter><con:parameter><con:name>EXCEPTIONS</con:name><con:value>XML</con:value></con:parameter><con:parameter><con:name>FORMAT</con:name><con:value>image/png</con:value></con:parameter><con:parameter><con:name>LAYERS</con:name><con:value>${#Project#firstlayercapabilities}</con:value></con:parameter><con:parameter><con:name>SRS</con:name><con:value>${#Project#firstlayercrs}</con:value></con:parameter></con:parameters></con:config></con:testStep><con:properties><con:property><con:name>MAIN_TESTSTEP</con:name><con:value>INSPIRE GetMap default layer</con:value></con:property><con:property><con:name>save_responses</con:name><con:value>TRUE</con:value></con:property><con:property><con:name>traces_dir</con:name><con:value>../../../logs/traces/</con:value></con:property></con:properties></con:testCase><con:properties><con:property><con:name>etf.AssociatedRequirements</con:name><con:value>M-CR-V04</con:value></con:property></con:properties></con:testSuite><con:testSuite name="O-CR-V05 - GetMap Optional" id="cbac95a8-28a0-45ac-bf63-2ee669a0b86b"><con:description>For various combinations of valid mandatory and optional
request parameters validate that the view service returns
 a valid map file</con:description><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetMap Optional Parameters" searchProperties="true" id="8ef5dfb7-d617-4c77-802c-32d9c41a8ace"><con:description>Optional params:
EXCEPTIONS: XML (always), INIMAGE (opt), BLANK (opt)
BGCOLOR: 0xFFFFFF value</con:description><con:settings/><con:testStep type="httprequest" name="test BGCOLOR" id="4ead6406-e9f5-4a52-af91-33030df8e15a"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="test BGCOLOR" id="19a02290-5321-46a5-83aa-0d46626baac3" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#getMapUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="O-CR-V05##BGCOLOR: valid image BGCOLOR" id="f00d6c2f-63ae-46f5-aeb3-8e82cab11e1d"><con:configuration><scriptText>headers = messageExchange.getResponseHeaders()
mimetype = headers["Content-Type"][0].split(";")[0]
log.info(mimetype)
assert mimetype == "image/png"
</scriptText></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="response size > 100" id="160869b7-3fe2-461b-b635-fb9302d682ac"><con:configuration><scriptText>/** Reponse size should be more that 1k. This should exclude most
INIMAGE exceptions */

m = messageExchange
size = messageExchange.getResponseContent().size()
log.info("size of response was: " + size)
assert size > 100
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>VERSION</con:name><con:value>1.3.0</con:value></con:parameter><con:parameter><con:name>SERVICE</con:name><con:value>WMS</con:value></con:parameter><con:parameter><con:name>REQUEST</con:name><con:value>GetMap</con:value></con:parameter><con:parameter><con:name>BGCOLOR</con:name><con:value>0x0000FF</con:value></con:parameter><con:parameter><con:name>CRS</con:name><con:value>${#Project#firstlayercrs}</con:value></con:parameter><con:parameter><con:name>BBOX</con:name><con:value>${#Project#bbox}</con:value></con:parameter><con:parameter><con:name>HEIGHT</con:name><con:value>600</con:value></con:parameter><con:parameter><con:name>STYLES</con:name><con:value>${#Project#firstlayerstyle}</con:value></con:parameter><con:parameter><con:name>WIDTH</con:name><con:value>800</con:value></con:parameter><con:parameter><con:name>TRANSPARENT</con:name><con:value>true</con:value></con:parameter><con:parameter><con:name>EXCEPTIONS</con:name><con:value>XML</con:value></con:parameter><con:parameter><con:name>FORMAT</con:name><con:value>image/png</con:value></con:parameter><con:parameter><con:name>LAYERS</con:name><con:value>${#Project#firstlayercapabilities}</con:value></con:parameter><con:parameter><con:name>SRS</con:name><con:value>${#Project#firstlayercrs}</con:value></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="httprequest" name="test EXCEPTIONS=INIMAGE" id="5ce49944-f43a-4f55-a845-9d2c2d3d6e6b"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="test EXCEPTIONS=INIMAGE" id="5ac8b26c-0ec8-4101-89dc-f5d72a2d2fe3" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#getMapUrl}</con:endpoint><con:request/><con:assertion type="GroovyScriptAssertion" name="O-CR-V05##INIMAGE: EXCEPTIONS format is image/png or text/xml" id="db89cbfa-a566-4ad0-92bb-3494e3308cff"><con:configuration><scriptText>headers = messageExchange.getResponseHeaders()
mimetype = headers["Content-Type"][0].split(";")[0]
log.info(mimetype)
// Add more descriptive failure message
assert mimetype == "image/png" || mimetype == "text/xml" : "The WMS does not return an exception in format image/png or text/xml (the default) if INIMAGE is requested. \n\n Request: \n" + new String( messageExchange.getRawRequestData() ) + "\n\n"
</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>VERSION</con:name><con:value>1.3.0</con:value></con:parameter><con:parameter><con:name>SERVICE</con:name><con:value>WMS</con:value></con:parameter><con:parameter><con:name>REQUEST</con:name><con:value>BREAKME</con:value></con:parameter><con:parameter><con:name>BGCOLOR</con:name><con:value/></con:parameter><con:parameter><con:name>CRS</con:name><con:value>${#Project#firstlayercrs}</con:value></con:parameter><con:parameter><con:name>BBOX</con:name><con:value>${#Project#bbox}</con:value></con:parameter><con:parameter><con:name>HEIGHT</con:name><con:value>600</con:value></con:parameter><con:parameter><con:name>STYLES</con:name><con:value>${#Project#firstlayerstyle}</con:value></con:parameter><con:parameter><con:name>WIDTH</con:name><con:value>800</con:value></con:parameter><con:parameter><con:name>TRANSPARENT</con:name><con:value>true</con:value></con:parameter><con:parameter><con:name>EXCEPTIONS</con:name><con:value>XML</con:value></con:parameter><con:parameter><con:name>FORMAT</con:name><con:value>image/png</con:value></con:parameter><con:parameter><con:name>LAYERS</con:name><con:value>${#Project#firstlayercapabilities}</con:value></con:parameter><con:parameter><con:name>SRS</con:name><con:value>${#Project#firstlayercrs}</con:value></con:parameter></con:parameters></con:config></con:testStep><con:properties><con:property><con:name>MAIN_TESTSTEP</con:name><con:value>test BGCOLOR</con:value></con:property><con:property><con:name>save_responses</con:name><con:value>TRUE</con:value></con:property><con:property><con:name>traces_dir</con:name><con:value>../../../logs/traces/</con:value></con:property></con:properties></con:testCase><con:properties><con:property><con:name>etf.AssociatedRequirements</con:name><con:value>O-CR-V05</con:value></con:property></con:properties></con:testSuite><con:testSuite name="M-CR-V10 - GetMetadataUrls Mandatory" id="2d1e06c8-f617-4008-b044-d8d5f2483a5c"><con:description>Get MetadataURLs from Capabilities and execute GetMetadata for each URL</con:description><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetMetadataURLs" searchProperties="true" id="ebf73e61-7c2a-4c5b-9ecf-f4b24a02e8ba"><con:settings/><con:testStep type="properties" name="Transfer_Properties" id="821bd1f0-122d-4f7f-aba1-8ca76a259f95"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>urlToTest</con:name><con:value/></con:property><con:property><con:name>Capabilities</con:name><con:value/></con:property><con:property><con:name>urlToTestEncoded</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="GetMetadataURLs" id="52ce3b19-186f-4920-ba5c-112820669727"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="GetMetadataURLs" id="36157a20-efc1-4a69-9b2d-6af4b5322083" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#serviceEndpoint}</con:endpoint><con:request/><con:assertion type="XQuery Match" name="M-CR-V10##MetadataURLexists: At least one MetadataURL exists" id="72337a6b-a6ec-4c90-ae45-30528124ce87"><con:configuration><path>declare namespace wms='http://www.opengis.net/wms';
declare namespace xlink='http://www.w3.org/1999/xlink';

&lt;result>AssertionFailures:
{
let $nrOfMetadataURLs:=count(//wms:Layer/wms:MetadataURL/wms:OnlineResource/@xlink:href)
return
if ($nrOfMetadataURLs=0)
then "there is no MetadataURL defined for any Layer. There should be at least one."
else ""
}

&lt;/result></path><content>&lt;result>AssertionFailures:&lt;/result></content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>ACCEPTVERSIONS</con:name><con:value>1.3.0</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>REQUEST</con:name><con:value>GetCapabilities</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>SERVICE</con:name><con:value>WMS</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="51f1c4d2-97c8-475c-b1b7-6f6bc87d9ab3"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="false" failOnError="true" ignoreEmpty="false" useXQuery="false" transferChildNodes="false" entitize="false" transferToAll="false"><con:name>Capabilities</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>GetMetadataURLs</con:sourceStep><con:sourcePath/><con:targetType>Capabilities</con:targetType><con:targetStep>Transfer_Properties</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="RunGetMetadataForLayer" id="ae003bba-5376-44a6-991b-13a931ed9f98"><con:settings/><con:config><script>import de.interactive_instruments.xtf.*;
SOAPUI_I.init(log,context,testRunner);

ProjectHelper ph = new ProjectHelper();
def capsXmlHolder = ph.getTransferPropertyAsXml("Capabilities")

//Pull out the metadataURLs
def metadataUrlNodes = capsXmlHolder.getNodeValues("//*:MetadataURL/*:OnlineResource/@*:href");
log.info("metadataUrlNodes: " + metadataUrlNodes);

// clear url to test
ph.setTransferProperty("urlToTest","")
ph.setTransferProperty("mdIdentifiersDatasetMetadata",'');


// run GetMetadata test for each url
for( url in metadataUrlNodes ) {
   ph.setTransferProperty("urlToTest",url)
   ph.runTestStep("GetMetadata")
   ph.runTestStep("PropertyTransferMD_Identifier")
}
</script></con:config></con:testStep><con:testStep type="httprequest" name="GetMetadata" id="7b5d60f8-e493-4418-b999-ef0077c34efa"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="GetMetadata" id="05df8ba4-292b-4bb9-9c77-244ad65c104a" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#urlToTest}</con:endpoint><con:request/><con:assertion type="XQuery Match" name="M-CR-V10##MD_Metadata: Metadata has root element MD_Metadata" id="929539a0-b601-4018-ad84-ec81384b9efb"><con:configuration><path>declare namespace gmd='http://www.isotc211.org/2005/gmd';
declare namespace csw='http://www.opengis.net/cat/csw/2.0.2';

&lt;result>AssertionFailures:
{
let $value:=//gmd:MD_Metadata
return
if (exists($value))
then ""
else "the referred dataset Metadata document does not seem to be ISO Metadata. It does not have an XML element gmd:Metadata. Check the URL in the MetadataURL of the layer. URL: '${#urlToTestEncoded}'"
}
&lt;/result></path><content>&lt;result>AssertionFailures:&lt;/result></content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XQuery Match" name="M-CR-V10##fileIdentifier: Metadata fileIdentifier exists" id="4f6c6702-a504-4a86-9b70-647024aef49b"><con:configuration><path>declare namespace gmd='http://www.isotc211.org/2005/gmd';

&lt;result>AssertionFailures:
{
let $fileIdentifier:=//gmd:MD_Metadata/gmd:fileIdentifier
return
if (string-length($fileIdentifier)=0)
then "there is no fileIdentifier defined in the Metadata."
else ""
}
&lt;/result></path><content>&lt;result>AssertionFailures:&lt;/result></content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:assertion type="XQuery Match" name="M-CR-V10##MD_identifierExists: The MD_Identifier exists in the ServiceMetadata" id="5ec43d39-34e8-4270-8b59-0f44f597335a"><con:configuration><path>declare namespace gmd='http://www.isotc211.org/2005/gmd';
declare namespace gco='http://www.isotc211.org/2005/gco';

&lt;result>AssertionFailures:
{
let $id:=//gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:identifier/gmd:MD_Identifier/gmd:code/gco:CharacterString
return
if (contains('${#Project#datasetIdentifiersList}', $id))
then ""
else concat("the MD_Identifier ",$id," does not exist in the service metadata. The MD_identifier is found in the metadata document at URL: '${#urlToTestEncoded}'. The service metadata refers to these identifiers: '${#Project#datasetIdentifiersList}'")
}
&lt;/result></path><content>&lt;result>AssertionFailures:&lt;/result></content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:testStep type="transfer" name="PropertyTransferMD_Identifier" id="ee257b93-c011-4489-91c6-809b0e0d515d"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="true" failOnError="true" ignoreEmpty="false" transferToAll="false" useXQuery="false" entitize="false" transferChildNodes="false"><con:name>addMD_IdentiferToList</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>GetMetadata</con:sourceStep><con:sourcePath>declare namespace gmd='http://www.isotc211.org/2005/gmd';
declare namespace gco='http://www.isotc211.org/2005/gco';

string-join(('${#Project#mdIdentifiersDatasetMetadata}',//gmd:MD_DataIdentification/gmd:citation/gmd:CI_Citation/gmd:identifier/gmd:MD_Identifier/gmd:code/gco:CharacterString),',')</con:sourcePath><con:targetType>mdIdentifiersDatasetMetadata</con:targetType><con:targetStep>#Project#</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="CompareDatasetIdentifiers" id="4f532942-41a8-4103-995f-6a5cce88e21d"><con:settings/><con:config><script>// This script tests whether all identifiers from the Service Metadata are mentioned in a Dataset metadata record
// and the other way around: all identifers from the Dataset metadata are mentioned in the Service Metadata
// check that:
// from list 1, all identifiers are present in list 2
// from list 2, all identifiers are present in list 1
def serviceMdDatasetIds = testRunner.testCase.testSuite.project.getPropertyValue("datasetIdentifiersList").split(',');
def datasetMdDatasetIds = testRunner.testCase.testSuite.project.getPropertyValue("mdIdentifiersDatasetMetadata").split(',');

// check 1: from service metadata, all dataset identifiers are mentioned in the dataset metadata (at least) once
for (sid in serviceMdDatasetIds) {
	def datasetIdFromServiceMetadataPresent = false;
	for (mid in datasetMdDatasetIds) {
		if (mid==sid) {
			datasetIdFromServiceMetadataPresent = true;
		}
	}
	if (datasetIdFromServiceMetadataPresent) {
		log.info("The id mentioned in Service Metadata " + sid + " is present in the identifiers from the Dataset Metadata (" + testRunner.testCase.testSuite.project.getPropertyValue("mdIdentifiersDatasetMetadata") + ") ")
	} else {
		log.error("The id mentioned in Service Metadata " + sid + " is NOT present in the identifiers from the Dataset Metadata (" + testRunner.testCase.testSuite.project.getPropertyValue("mdIdentifiersDatasetMetadata") + ") ")
	}
	assert datasetIdFromServiceMetadataPresent;
}

// now the other way around
// check 2: from dataset metadata, all dataset identifiers are mentioned in the service metadata (at least) once

for (mid in datasetMdDatasetIds) {
	if (mid.length() > 0) {
		def datasetIdFromDatasetMetadataPresent = false;
		for (sid in serviceMdDatasetIds) {
			if (mid==sid) {
				datasetIdFromDatasetMetadataPresent = true;
			}
		}
		if (datasetIdFromDatasetMetadataPresent) {
			log.info("The id mentioned in Dataset Metadata " + mid + " is present in the identifiers from the Service Metadata (" + testRunner.testCase.testSuite.project.getPropertyValue("datasetIdentifiersList") + ")")
		} else {
			log.error("The id mentioned in Dataset Metadata " + mid + " is NOT present in the identifiers from the Service Metadata (" + testRunner.testCase.testSuite.project.getPropertyValue("datasetIdentifiersList") + ")")
		}
		assert datasetIdFromDatasetMetadataPresent;
	}
}</script></con:config></con:testStep><con:properties><con:property><con:name>MAIN_TESTSTEP</con:name><con:value>GetMetadata</con:value></con:property><con:property><con:name>save_responses</con:name><con:value>TRUE</con:value></con:property><con:property><con:name>traces_dir</con:name><con:value>../../../logs/traces/</con:value></con:property></con:properties></con:testCase><con:properties><con:property><con:name>etf.AssociatedRequirements</con:name><con:value>M-CR-V10</con:value></con:property></con:properties></con:testSuite><con:testSuite name="M-CR-V11 - GetLegendUrls Mandatory" id="ef66227f-b28c-4c24-aafb-f6ba7af9821b"><con:description>Get LegendURLs from Capabilities, fetch the images and check these</con:description><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="GetLegendURLs" searchProperties="true" id="1e7dbd93-62ac-455e-9408-de4484158fc9"><con:settings/><con:testStep type="properties" name="Properties" id="4545cf9d-3f0c-4f64-973b-28e0459c6cea"><con:settings/><con:config xsi:type="con:PropertiesStep" saveFirst="true" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:properties><con:property><con:name>urlToTest</con:name><con:value/></con:property><con:property><con:name>Capabilities</con:name><con:value/></con:property></con:properties></con:config></con:testStep><con:testStep type="httprequest" name="GetLegendURLs" id="77432cd2-558f-4869-b03d-c242529e8a85"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="GetLegendURLs" id="46a58c83-5dbc-49b0-8031-7e0799482cc2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#Project#serviceEndpoint}</con:endpoint><con:request/><con:assertion type="XQuery Match" name="M-CR-V11##StylesLegendURLs: INSPIRE Styles: all Styles have a LegendURL" id="cfb883ab-e8e3-4ccd-af57-2d74e2fa10ac"><con:configuration><path>declare namespace wms='http://www.opengis.net/wms';
declare namespace xlink='http://www.w3.org/1999/xlink';
declare namespace inspire_vs='http://inspire.ec.europa.eu/schemas/inspire_vs/1.0';
declare namespace inspire_common='http://inspire.ec.europa.eu/schemas/common/1.0';
declare namespace xsi='http://www.w3.org/2001/XMLSchema-instance';

&lt;result>AssertionFailures:
{
for $stylesWithoutLegendURL in //wms:Style[string-length(wms:LegendURL/wms:OnlineResource/@xlink:href)=0]
return
concat ("The Style with name '",$stylesWithoutLegendURL/wms:Name,"' of Layer '",$stylesWithoutLegendURL/../wms:Name,"' does not have a LegendURL. ")
}
&lt;/result></path><content>&lt;result>AssertionFailures:&lt;/result></content><allowWildcards>false</allowWildcards></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters><con:parameter><con:name>ACCEPTVERSIONS</con:name><con:value>1.3.0</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>REQUEST</con:name><con:value>GetCapabilities</con:value><con:style>QUERY</con:style></con:parameter><con:parameter><con:name>SERVICE</con:name><con:value>WMS</con:value><con:style>QUERY</con:style></con:parameter></con:parameters></con:config></con:testStep><con:testStep type="transfer" name="Property Transfer" id="d450eece-70cc-47b9-8746-b9ab2868b73f"><con:settings/><con:config xsi:type="con:PropertyTransfersStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:transfers setNullOnMissingSource="true" transferTextContent="false" failOnError="true" ignoreEmpty="false" useXQuery="false" transferChildNodes="false" entitize="false" transferToAll="false"><con:name>Capabilities</con:name><con:sourceType>ResponseAsXml</con:sourceType><con:sourceStep>GetLegendURLs</con:sourceStep><con:sourcePath/><con:targetType>Capabilities</con:targetType><con:targetStep>Properties</con:targetStep><con:upgraded>true</con:upgraded></con:transfers></con:config></con:testStep><con:testStep type="groovy" name="RunGetLegendForStyles" id="ee2dc303-47ee-40a3-a3f3-f9bc9feb57ec"><con:settings/><con:config><script>props = testRunner.testCase.testSteps['Properties']

// log.info("Caps: " + props.getPropertyValue("Capabilities"))
//Start parsing of Capabilities
def groovyUtils = new com.eviware.soapui.support.GroovyUtils(context);
def capabilitiesHolder = groovyUtils.getXmlHolder(props.getPropertyValue("Capabilities"))
capabilitiesHolder.namespaces["wms"] = "http://www.opengis.net/wms";
capabilitiesHolder.namespaces["xlink"] = "http://www.w3.org/1999/xlink";

//Pull out the LegendURLs
def legendUrlNodes = capabilitiesHolder.getNodeValues("//*/wms:LegendURL/*/@xlink:href");
log.info("legendUrlNodes: " + legendUrlNodes);

// run GetMetadata test for each url
for( i in legendUrlNodes )
{
   i=i.replaceAll("%2F","/")
   i=i.replaceAll("%3A",":")
   log.info("Legend URL: " + i)
   props.setPropertyValue("urlToTest",i)
   testRunner.runTestStepByName("GetLegend")
}</script></con:config></con:testStep><con:testStep type="httprequest" name="GetLegend" id="f6cfc5be-7df9-4994-b069-e7e1856ba892"><con:settings/><con:config method="GET" xsi:type="con:HttpRequest" name="GetLegend" id="1c5d058b-ff9b-4fac-b7c4-2689c34bcd3b" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>${#urlToTest}</con:endpoint><con:request/><con:assertion type="Response SLA Assertion" name="Response SLA" id="94110e30-286f-4736-8681-c7af5336128d"><con:configuration><SLA>5000</SLA></con:configuration></con:assertion><con:assertion type="GroovyScriptAssertion" name="Content is an image" id="2e28ba1c-32d2-4819-b947-8b7bfb70e862"><con:configuration><scriptText>headers = messageExchange.getResponseHeaders()
mimetype = headers["Content-Type"][0].split(";")[0]
log.info(mimetype)
// image/png or image/gif or image/jpg or image/jpeg, to be sure:
// just check for image
assert mimetype.split("/")[0] == "image"</scriptText></con:configuration></con:assertion><con:credentials><con:authType>Global HTTP Settings</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:parameters/></con:config></con:testStep><con:properties><con:property><con:name>MAIN_TESTSTEP</con:name><con:value>GetLegend</con:value></con:property><con:property><con:name>save_responses</con:name><con:value>TRUE</con:value></con:property><con:property><con:name>traces_dir</con:name><con:value>../../../logs/traces/</con:value></con:property></con:properties></con:testCase><con:properties><con:property><con:name>etf.AssociatedRequirements</con:name><con:value>M-CR-V11</con:value></con:property></con:properties></con:testSuite><con:properties><con:property><con:name>serviceEndpoint</con:name><con:value>http://none</con:value></con:property><con:property><con:name>layer</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>minlat</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>minlon</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>maxlat</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>maxlon</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>bbox</con:name><con:value/></con:property><con:property><con:name>firstlayercapabilities</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>layerList</con:name><con:value/></con:property><con:property><con:name>getMapUrl</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>metadataUrl</con:name><con:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/></con:property><con:property><con:name>firstlayercrs</con:name><con:value/></con:property><con:property><con:name>datasetIdentifiersList</con:name><con:value/></con:property><con:property><con:name>getCapabilitiesURL</con:name><con:value/></con:property><con:property><con:name>mdIdentifiersDatasetMetadata</con:name><con:value/></con:property><con:property><con:name>etf.ignore.properties</con:name><con:value>authUser, authPwd, authMethod, minlon, minlat, maxlon, maxlat, bbox, firstlayercapabilities, layerList, getMapUrl, metadataUrl, firstlayercrs, datasetIdentifiersList, getCapabilitiesURL, mdIdentifiersDatasetMetadata, layer</con:value></con:property><con:property><con:name>authUser</con:name><con:value/></con:property><con:property><con:name>authPwd</con:name><con:value/></con:property><con:property><con:name>authMethod</con:name><con:value>basic</con:value></con:property><con:property><con:name>firstlayerstyle</con:name><con:value/></con:property></con:properties><con:wssContainer/><con:oAuth2ProfileContainer/><con:oAuth1ProfileContainer/><con:sensitiveInformation/></con:soapui-project>